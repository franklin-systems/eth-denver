{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hackathonEndTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_captain",
          "type": "address"
        }
      ],
      "name": "declareWinner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hacker",
          "type": "address"
        }
      ],
      "name": "getDevelopersRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hacker",
          "type": "address"
        }
      ],
      "name": "getTeamByCaptain",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "captainAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "developer1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "developer2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "designer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "productManager",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "winner",
              "type": "bool"
            }
          ],
          "internalType": "struct Hackathon.Team",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hackathonAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hackathonEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hackathonStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hackersByAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "teamCaptain",
          "type": "address"
        },
        {
          "internalType": "enum Hackathon.Role",
          "name": "role",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isHacker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hacker",
          "type": "address"
        }
      ],
      "name": "isOnTeam",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hacker",
          "type": "address"
        }
      ],
      "name": "isWinner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Hackathon.Role",
          "name": "_roll",
          "type": "uint8"
        }
      ],
      "name": "registerAsCaptain",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Hackathon.Role",
          "name": "_roll",
          "type": "uint8"
        }
      ],
      "name": "registerAsHacker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hacker",
          "type": "address"
        }
      ],
      "name": "removeTeamMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hacker",
          "type": "address"
        }
      ],
      "name": "selectTeamMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hacker",
          "type": "address"
        }
      ],
      "name": "teamRequiresDesigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hacker",
          "type": "address"
        }
      ],
      "name": "teamRequiresProductManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "teams",
      "outputs": [
        {
          "internalType": "address",
          "name": "captainAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "developer1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "developer2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "designer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "productManager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "winner",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "teamsByCaptain",
      "outputs": [
        {
          "internalType": "address",
          "name": "captainAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "developer1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "developer2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "designer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "productManager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "winner",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161162b38038061162b83398101604081905261002f9161004f565b600080546001600160a01b03191633179055600191909155600255610073565b6000806040838503121561006257600080fd5b505080516020909101519092909150565b6115a9806100826000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806389b3d661116100a2578063a9a7d7e911610071578063a9a7d7e9146103c0578063ad15d422146103d3578063b3606500146103e6578063b9670c5414610440578063db33f4f81461046b57600080fd5b806389b3d661146102435780639c044754146103575780639d9ca28d1461039a578063a09fd05e146103ad57600080fd5b80636a81d8ec116100e95780636a81d8ec146101c35780636ead1acb146101d65780636f9a73ad146101df578063746c35e6146102025780637e101f781461023057600080fd5b80630a71e6fb1461011b57806314eba026146101375780633ed2b77a1461015a5780636172b628146101b0575b600080fd5b61012460015481565b6040519081526020015b60405180910390f35b61014a610145366004611435565b61047e565b604051901515815260200161012e565b61016d61016836600461145e565b610764565b604080516001600160a01b0397881681529587166020870152938616938501939093529084166060840152909216608082015290151560a082015260c00161012e565b6101246101be366004611435565b6107c5565b61014a6101d1366004611435565b61083d565b61012460025481565b61014a6101ed366004611435565b60046020526000908152604090205460ff1681565b61014a610210366004611435565b6001600160a01b0390811660009081526005602052604090205416151590565b61014a61023e366004611477565b610872565b6102fa610251366004611435565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506001600160a01b03908116600090815260066020908152604091829020825160c081018452815485168152600182015485169281019290925260028101548416928201929092526003820154831660608201526004909101549182166080820152600160a01b90910460ff16151560a082015290565b60405161012e919081516001600160a01b0390811682526020808401518216908301526040808401518216908301526060808401518216908301526080808401519091169082015260a09182015115159181019190915260c00190565b61038c610365366004611435565b6005602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b60405161012e9291906114ae565b61014a6103a8366004611435565b6109a3565b61014a6103bb366004611435565b610a96565b61014a6103ce366004611477565b610ac2565b61014a6103e1366004611435565b610e78565b61016d6103f4366004611435565b600660205260009081526040902080546001820154600283015460038401546004909401546001600160a01b03938416949284169391821692821691811690600160a01b900460ff1686565b600054610453906001600160a01b031681565b6040516001600160a01b03909116815260200161012e565b61014a610479366004611435565b6112d9565b600060015442106104f05760405162461bcd60e51b815260206004820152603160248201527f436f6e666572656e63652068617320737461727465642c2063616e6e6f74207260448201527032b6b7bb32903a32b0b69036b2b6b132b960791b60648201526084015b60405180910390fd5b336000818152600660205260409020546001600160a01b0316146105505760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba10309031b0b83a30b4b760491b60448201526064016104e7565b6001600160a01b038281166000908152600660205260409020541633146105c45760405162461bcd60e51b815260206004820152602260248201527f4861636b6572206973206e6f74206f6e207468652063616c6c65722773207465604482015261616d60f01b60648201526084016104e7565b33600090815260066020526040902060018101546001600160a01b03848116911603610601576001810180546001600160a01b0319169055610687565b60028101546001600160a01b0380851691160361062f576002810180546001600160a01b0319169055610687565b60038101546001600160a01b0380851691160361065d576003810180546001600160a01b0319169055610687565b60048101546001600160a01b03808516911603610687576004810180546001600160a01b03191690555b50506001600160a01b03908116600081815260056020908152604080832080546001600160a01b0319908116909155815160c081018352848152808401858152818401868152606083018781526080840188815260a08501898152998952600690975294909620915182549089169084161782555160018281018054928a1692851692909217909155945160028201805491891691841691909117905591516003830180549188169190921617905590516004909101805493511515600160a01b026001600160a81b031990941691909416179190911790915590565b6007818154811061077457600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b03938416955091831693908316929081169190811690600160a01b900460ff1686565b6001600160a01b038181166000908152600660205260408120600101549091829116156107fa57806107f6816114ff565b9150505b6001600160a01b03838116600090815260066020526040902060020154161561082b5780610827816114ff565b9150505b610836816002611518565b9392505050565b6001600160a01b038181166000908152600660205260408120600301549091161561086957600061086c565b60015b92915050565b3360009081526004602052604081205460ff16156108d25760405162461bcd60e51b815260206004820152601c60248201527f4861636b657220697320616c726561647920726567697374657265640000000060448201526064016104e7565b6000604051806040016040528060006001600160a01b0316815260200184600281111561090157610901611498565b9052336000908152600560209081526040909120825181546001600160a01b03919091166001600160a01b0319821681178355928401519394508493919283916001600160a81b03191617600160a01b83600281111561096357610963611498565b021790555050600380549150600061097a836114ff565b9091555050336000908152600460205260409020805460ff191660019081179091559392505050565b600060025442116109f65760405162461bcd60e51b815260206004820152601b60248201527f4861636b6174686f6e20686173206e6f7420656e64656420796574000000000060448201526064016104e7565b6001600160a01b0382811660009081526005602052604090205416610a5d5760405162461bcd60e51b815260206004820152601760248201527f4861636b6572206973206e6f74206f6e2061207465616d00000000000000000060448201526064016104e7565b506001600160a01b039081166000908152600560209081526040808320549093168252600690522060040154600160a01b900460ff1690565b6001600160a01b038181166000908152600660205260408120600401549091161561086957600061086c565b600060038054610ad2919061152b565b60075410610b165760405162461bcd60e51b8152602060048201526011602482015270546f6f206d616e79206361707461696e7360781b60448201526064016104e7565b3360009081526004602052604090205460ff1615610b765760405162461bcd60e51b815260206004820152601c60248201527f4861636b657220697320616c726561647920726567697374657265640000000060448201526064016104e7565b6040805160c081018252338152600060208201819052918101829052606081018290526080810182905260a0810182905290836002811115610bba57610bba611498565b03610bca57336020820152610c0e565b6001836002811115610bde57610bde611498565b03610bee57336060820152610c0e565b6002836002811115610c0257610c02611498565b03610c0e573360808201525b6007805460018082018355600092835283517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600590930292830180546001600160a01b03199081166001600160a01b0393841617909155602080870180517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689870180548516918616919091179055604080890180517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a89018054871691881691909117905560608a0180517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b8a018054881691891691909117905560808b0180517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c909a01805460a08e0180519c8b166001600160a81b031992831617600160a01b9d15158e021790925533808e5260068952868e208f5181548c16908d1617815597519b880180548b169c8c169c909c17909b559351600280880180548b16928c16929092179091559251600387018054909916908a1617909755516004909401805496519490971695909116949094179115159096021790925583518085019094529183528201908690811115610dea57610dea611498565b9052336000908152600560209081526040909120825181546001600160a01b03919091166001600160a01b0319821681178355928401519394508493919283916001600160a81b03191617600160a01b836002811115610e4c57610e4c611498565b021790555050336000908152600460205260409020805460ff1916600190811790915595945050505050565b3360008181526006602052604081205490916001600160a01b0390911614610edc5760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba10309031b0b83a30b4b760491b60448201526064016104e7565b6001600160a01b03821660009081526004602052604090205460ff16610f445760405162461bcd60e51b815260206004820152601860248201527f4861636b6572206973206e6f742072656769737465726564000000000000000060448201526064016104e7565b6001600160a01b038281166000908152600560205260409020541615610fac5760405162461bcd60e51b815260206004820152601b60248201527f4861636b657220697320616c7265616479206f6e2061207465616d000000000060448201526064016104e7565b60006001600160a01b038316600090815260056020526040902054600160a01b900460ff166002811115610fe257610fe2611498565b036110c457336000908152600660205260409020600101546001600160a01b031615806110285750336000908152600660205260409020600201546001600160a01b0316155b6110445760405162461bcd60e51b81526004016104e79061154d565b336000908152600660205260409020600101546001600160a01b03166110945733600090815260066020526040902060010180546001600160a01b0319166001600160a01b038416179055611208565b33600090815260066020526040902060020180546001600160a01b0319166001600160a01b038416179055611208565b60016001600160a01b038316600090815260056020526040902054600160a01b900460ff1660028111156110fa576110fa611498565b0361116857336000908152600660205260409020600301546001600160a01b0316156111385760405162461bcd60e51b81526004016104e79061154d565b33600090815260066020526040902060030180546001600160a01b0319166001600160a01b038416179055611208565b60026001600160a01b038316600090815260056020526040902054600160a01b900460ff16600281111561119e5761119e611498565b0361120857336000908152600660205260409020600401546001600160a01b0316156111dc5760405162461bcd60e51b81526004016104e79061154d565b33600090815260066020526040902060040180546001600160a01b0319166001600160a01b0384161790555b506001600160a01b03908116600081815260056020908152604080832080546001600160a01b031990811633908117909255908452600690925280832093835290912082548154831690851617815560018381015482820180548516918716919091179055600280850154908301805485169187169190911790556003808501549083018054851691871691909117905560049384018054949092018054938416949095169384178555905460ff600160a01b91829004161515026001600160a81b03199092169092171790915590565b600080546001600160a01b0316331461133e5760405162461bcd60e51b815260206004820152602160248201527f43616c6c6572206973206e6f7420746865206861636b6174686f6e2061646d696044820152603760f91b60648201526084016104e7565b600254421161138f5760405162461bcd60e51b815260206004820152601b60248201527f4861636b6174686f6e20686173206e6f7420656e64656420796574000000000060448201526064016104e7565b6001600160a01b03808316600081815260066020526040902054909116146114045760405162461bcd60e51b815260206004820152602260248201527f41646472657373206e6f74206173736f63696174656420776974682061207465604482015261616d60f01b60648201526084016104e7565b506001600160a01b03166000908152600660205260409020600401805460ff60a01b1916600160a01b179055600190565b60006020828403121561144757600080fd5b81356001600160a01b038116811461083657600080fd5b60006020828403121561147057600080fd5b5035919050565b60006020828403121561148957600080fd5b81356003811061083657600080fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038316815260408101600383106114dc57634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611511576115116114e9565b5060010190565b8181038181111561086c5761086c6114e9565b60008261154857634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600c908201526b1519585b481a5cc8199d5b1b60a21b60408201526060019056fea26469706673582212204d206c12c3849a18f82a4250ef1073037c1415ae82ab6d8d01ca81484f9beec364736f6c63430008130033",
    "sourceMap": "57:9195:0:-:0;;;1234:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1311:14;:27;;-1:-1:-1;;;;;;1311:27:0;1328:10;1311:27;;;;1348:40;;;;1398:16;:36;57:9195;;14:245:1;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;-1:-1:-1;;193:16:1;;249:2;234:18;;;228:25;193:16;;228:25;;-1:-1:-1;14:245:1:o;:::-;57:9195:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c806389b3d661116100a2578063a9a7d7e911610071578063a9a7d7e9146103c0578063ad15d422146103d3578063b3606500146103e6578063b9670c5414610440578063db33f4f81461046b57600080fd5b806389b3d661146102435780639c044754146103575780639d9ca28d1461039a578063a09fd05e146103ad57600080fd5b80636a81d8ec116100e95780636a81d8ec146101c35780636ead1acb146101d65780636f9a73ad146101df578063746c35e6146102025780637e101f781461023057600080fd5b80630a71e6fb1461011b57806314eba026146101375780633ed2b77a1461015a5780636172b628146101b0575b600080fd5b61012460015481565b6040519081526020015b60405180910390f35b61014a610145366004611435565b61047e565b604051901515815260200161012e565b61016d61016836600461145e565b610764565b604080516001600160a01b0397881681529587166020870152938616938501939093529084166060840152909216608082015290151560a082015260c00161012e565b6101246101be366004611435565b6107c5565b61014a6101d1366004611435565b61083d565b61012460025481565b61014a6101ed366004611435565b60046020526000908152604090205460ff1681565b61014a610210366004611435565b6001600160a01b0390811660009081526005602052604090205416151590565b61014a61023e366004611477565b610872565b6102fa610251366004611435565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506001600160a01b03908116600090815260066020908152604091829020825160c081018452815485168152600182015485169281019290925260028101548416928201929092526003820154831660608201526004909101549182166080820152600160a01b90910460ff16151560a082015290565b60405161012e919081516001600160a01b0390811682526020808401518216908301526040808401518216908301526060808401518216908301526080808401519091169082015260a09182015115159181019190915260c00190565b61038c610365366004611435565b6005602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b60405161012e9291906114ae565b61014a6103a8366004611435565b6109a3565b61014a6103bb366004611435565b610a96565b61014a6103ce366004611477565b610ac2565b61014a6103e1366004611435565b610e78565b61016d6103f4366004611435565b600660205260009081526040902080546001820154600283015460038401546004909401546001600160a01b03938416949284169391821692821691811690600160a01b900460ff1686565b600054610453906001600160a01b031681565b6040516001600160a01b03909116815260200161012e565b61014a610479366004611435565b6112d9565b600060015442106104f05760405162461bcd60e51b815260206004820152603160248201527f436f6e666572656e63652068617320737461727465642c2063616e6e6f74207260448201527032b6b7bb32903a32b0b69036b2b6b132b960791b60648201526084015b60405180910390fd5b336000818152600660205260409020546001600160a01b0316146105505760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba10309031b0b83a30b4b760491b60448201526064016104e7565b6001600160a01b038281166000908152600660205260409020541633146105c45760405162461bcd60e51b815260206004820152602260248201527f4861636b6572206973206e6f74206f6e207468652063616c6c65722773207465604482015261616d60f01b60648201526084016104e7565b33600090815260066020526040902060018101546001600160a01b03848116911603610601576001810180546001600160a01b0319169055610687565b60028101546001600160a01b0380851691160361062f576002810180546001600160a01b0319169055610687565b60038101546001600160a01b0380851691160361065d576003810180546001600160a01b0319169055610687565b60048101546001600160a01b03808516911603610687576004810180546001600160a01b03191690555b50506001600160a01b03908116600081815260056020908152604080832080546001600160a01b0319908116909155815160c081018352848152808401858152818401868152606083018781526080840188815260a08501898152998952600690975294909620915182549089169084161782555160018281018054928a1692851692909217909155945160028201805491891691841691909117905591516003830180549188169190921617905590516004909101805493511515600160a01b026001600160a81b031990941691909416179190911790915590565b6007818154811061077457600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b03938416955091831693908316929081169190811690600160a01b900460ff1686565b6001600160a01b038181166000908152600660205260408120600101549091829116156107fa57806107f6816114ff565b9150505b6001600160a01b03838116600090815260066020526040902060020154161561082b5780610827816114ff565b9150505b610836816002611518565b9392505050565b6001600160a01b038181166000908152600660205260408120600301549091161561086957600061086c565b60015b92915050565b3360009081526004602052604081205460ff16156108d25760405162461bcd60e51b815260206004820152601c60248201527f4861636b657220697320616c726561647920726567697374657265640000000060448201526064016104e7565b6000604051806040016040528060006001600160a01b0316815260200184600281111561090157610901611498565b9052336000908152600560209081526040909120825181546001600160a01b03919091166001600160a01b0319821681178355928401519394508493919283916001600160a81b03191617600160a01b83600281111561096357610963611498565b021790555050600380549150600061097a836114ff565b9091555050336000908152600460205260409020805460ff191660019081179091559392505050565b600060025442116109f65760405162461bcd60e51b815260206004820152601b60248201527f4861636b6174686f6e20686173206e6f7420656e64656420796574000000000060448201526064016104e7565b6001600160a01b0382811660009081526005602052604090205416610a5d5760405162461bcd60e51b815260206004820152601760248201527f4861636b6572206973206e6f74206f6e2061207465616d00000000000000000060448201526064016104e7565b506001600160a01b039081166000908152600560209081526040808320549093168252600690522060040154600160a01b900460ff1690565b6001600160a01b038181166000908152600660205260408120600401549091161561086957600061086c565b600060038054610ad2919061152b565b60075410610b165760405162461bcd60e51b8152602060048201526011602482015270546f6f206d616e79206361707461696e7360781b60448201526064016104e7565b3360009081526004602052604090205460ff1615610b765760405162461bcd60e51b815260206004820152601c60248201527f4861636b657220697320616c726561647920726567697374657265640000000060448201526064016104e7565b6040805160c081018252338152600060208201819052918101829052606081018290526080810182905260a0810182905290836002811115610bba57610bba611498565b03610bca57336020820152610c0e565b6001836002811115610bde57610bde611498565b03610bee57336060820152610c0e565b6002836002811115610c0257610c02611498565b03610c0e573360808201525b6007805460018082018355600092835283517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600590930292830180546001600160a01b03199081166001600160a01b0393841617909155602080870180517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689870180548516918616919091179055604080890180517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a89018054871691881691909117905560608a0180517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b8a018054881691891691909117905560808b0180517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c909a01805460a08e0180519c8b166001600160a81b031992831617600160a01b9d15158e021790925533808e5260068952868e208f5181548c16908d1617815597519b880180548b169c8c169c909c17909b559351600280880180548b16928c16929092179091559251600387018054909916908a1617909755516004909401805496519490971695909116949094179115159096021790925583518085019094529183528201908690811115610dea57610dea611498565b9052336000908152600560209081526040909120825181546001600160a01b03919091166001600160a01b0319821681178355928401519394508493919283916001600160a81b03191617600160a01b836002811115610e4c57610e4c611498565b021790555050336000908152600460205260409020805460ff1916600190811790915595945050505050565b3360008181526006602052604081205490916001600160a01b0390911614610edc5760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba10309031b0b83a30b4b760491b60448201526064016104e7565b6001600160a01b03821660009081526004602052604090205460ff16610f445760405162461bcd60e51b815260206004820152601860248201527f4861636b6572206973206e6f742072656769737465726564000000000000000060448201526064016104e7565b6001600160a01b038281166000908152600560205260409020541615610fac5760405162461bcd60e51b815260206004820152601b60248201527f4861636b657220697320616c7265616479206f6e2061207465616d000000000060448201526064016104e7565b60006001600160a01b038316600090815260056020526040902054600160a01b900460ff166002811115610fe257610fe2611498565b036110c457336000908152600660205260409020600101546001600160a01b031615806110285750336000908152600660205260409020600201546001600160a01b0316155b6110445760405162461bcd60e51b81526004016104e79061154d565b336000908152600660205260409020600101546001600160a01b03166110945733600090815260066020526040902060010180546001600160a01b0319166001600160a01b038416179055611208565b33600090815260066020526040902060020180546001600160a01b0319166001600160a01b038416179055611208565b60016001600160a01b038316600090815260056020526040902054600160a01b900460ff1660028111156110fa576110fa611498565b0361116857336000908152600660205260409020600301546001600160a01b0316156111385760405162461bcd60e51b81526004016104e79061154d565b33600090815260066020526040902060030180546001600160a01b0319166001600160a01b038416179055611208565b60026001600160a01b038316600090815260056020526040902054600160a01b900460ff16600281111561119e5761119e611498565b0361120857336000908152600660205260409020600401546001600160a01b0316156111dc5760405162461bcd60e51b81526004016104e79061154d565b33600090815260066020526040902060040180546001600160a01b0319166001600160a01b0384161790555b506001600160a01b03908116600081815260056020908152604080832080546001600160a01b031990811633908117909255908452600690925280832093835290912082548154831690851617815560018381015482820180548516918716919091179055600280850154908301805485169187169190911790556003808501549083018054851691871691909117905560049384018054949092018054938416949095169384178555905460ff600160a01b91829004161515026001600160a81b03199092169092171790915590565b600080546001600160a01b0316331461133e5760405162461bcd60e51b815260206004820152602160248201527f43616c6c6572206973206e6f7420746865206861636b6174686f6e2061646d696044820152603760f91b60648201526084016104e7565b600254421161138f5760405162461bcd60e51b815260206004820152601b60248201527f4861636b6174686f6e20686173206e6f7420656e64656420796574000000000060448201526064016104e7565b6001600160a01b03808316600081815260066020526040902054909116146114045760405162461bcd60e51b815260206004820152602260248201527f41646472657373206e6f74206173736f63696174656420776974682061207465604482015261616d60f01b60648201526084016104e7565b506001600160a01b03166000908152600660205260409020600401805460ff60a01b1916600160a01b179055600190565b60006020828403121561144757600080fd5b81356001600160a01b038116811461083657600080fd5b60006020828403121561147057600080fd5b5035919050565b60006020828403121561148957600080fd5b81356003811061083657600080fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038316815260408101600383106114dc57634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611511576115116114e9565b5060010190565b8181038181111561086c5761086c6114e9565b60008261154857634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600c908201526b1519585b481a5cc8199d5b1b60a21b60408201526060019056fea26469706673582212204d206c12c3849a18f82a4250ef1073037c1415ae82ab6d8d01ca81484f9beec364736f6c63430008130033",
    "sourceMap": "57:9195:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;118:33;;;;;;;;;160:25:1;;;148:2;133:18;118:33:0;;;;;;;;6691:1314;;;;;;:::i;:::-;;:::i;:::-;;;652:14:1;;645:22;627:41;;615:2;600:18;6691:1314:0;487:187:1;1208:19:0;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1201:15:1;;;1183:34;;1253:15;;;1248:2;1233:18;;1226:43;1305:15;;;1285:18;;;1278:43;;;;1357:15;;;1352:2;1337:18;;1330:43;1410:15;;;1404:3;1389:19;;1382:44;1470:14;;1463:22;1163:3;1442:19;;1435:51;1132:3;1117:19;1208::0;864:628:1;2153:471:0;;;;;;:::i;:::-;;:::i;1811:159::-;;;;;;:::i;:::-;;:::i;158:31::-;;;;;;969:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1502:137;;;;;;:::i;:::-;-1:-1:-1;;;;;1581:25:0;;;1559:4;1581:25;;;:16;:25;;;;;:37;;:51;;;1502:137;3993:616;;;;;;:::i;:::-;;:::i;1681:124::-;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1775:23:0;;;;;;;:14;:23;;;;;;;;;1768:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1768:30:0;;;;;;;;;;;;1681:124;;;;;;;2012:13:1;;-1:-1:-1;;;;;2008:22:1;;;1990:41;;2091:4;2079:17;;;2073:24;2069:33;;2047:20;;;2040:63;2163:4;2151:17;;;2145:24;2141:33;;2119:20;;;2112:63;2235:4;2223:17;;;2217:24;2213:33;;2191:20;;;2184:63;2307:4;2295:17;;;2289:24;2285:33;;;2263:20;;;2256:63;1970:3;2377:17;;;2371:24;2364:32;2357:40;2335:20;;;2328:70;;;;1939:3;1924:19;;1765:639;1048:50:0;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1048:50:0;;;-1:-1:-1;;;1048:50:0;;;;;;;;;;;;;;:::i;8749:501::-;;;;;;:::i;:::-;;:::i;1976:171::-;;;;;;:::i;:::-;;:::i;2660:1289::-;;;;;;:::i;:::-;;:::i;4644:2012::-;;;;;;:::i;:::-;;:::i;1134:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1134:46:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1134:46:0;;;;;;82:29;;;;;-1:-1:-1;;;;;82:29:0;;;;;;-1:-1:-1;;;;;3142:32:1;;;3124:51;;3112:2;3097:18;82:29:0;2978:203:1;8034:603:0;;;;;;:::i;:::-;;:::i;6691:1314::-;6751:4;6844:18;;6826:15;:36;6818:98;;;;-1:-1:-1;;;6818:98:0;;3388:2:1;6818:98:0;;;3370:21:1;3427:2;3407:18;;;3400:30;3466:34;3446:18;;;3439:62;-1:-1:-1;;;3517:18:1;;;3510:47;3574:19;;6818:98:0;;;;;;;;;7025:10;6980:26;;;;:14;:26;;;;;:41;-1:-1:-1;;;;;6980:41:0;:55;6972:91;;;;-1:-1:-1;;;6972:91:0;;3806:2:1;6972:91:0;;;3788:21:1;3845:2;3825:18;;;3818:30;-1:-1:-1;;;3864:18:1;;;3857:53;3927:18;;6972:91:0;3604:347:1;6972:91:0;-1:-1:-1;;;;;7135:23:0;;;;;;;:14;:23;;;;;:38;;7177:10;7135:52;7127:99;;;;-1:-1:-1;;;7127:99:0;;4158:2:1;7127:99:0;;;4140:21:1;4197:2;4177:18;;;4170:30;4236:34;4216:18;;;4209:62;-1:-1:-1;;;4287:18:1;;;4280:32;4329:19;;7127:99:0;3956:398:1;7127:99:0;7272:10;7237:17;7257:26;;;:14;:26;;;;;7297:15;;;;-1:-1:-1;;;;;7297:26:0;;;:15;;:26;7294:378;;7338:15;;;:28;;-1:-1:-1;;;;;;7338:28:0;;;7294:378;;;7394:15;;;;-1:-1:-1;;;;;7394:26:0;;;:15;;:26;7391:281;;7435:15;;;:28;;-1:-1:-1;;;;;;7435:28:0;;;7391:281;;;7491:13;;;;-1:-1:-1;;;;;7491:24:0;;;:13;;:24;7488:184;;7530:13;;;:26;;-1:-1:-1;;;;;;7530:26:0;;;7488:184;;;7584:19;;;;-1:-1:-1;;;;;7584:30:0;;;:19;;:30;7581:91;;7629:19;;;:32;;-1:-1:-1;;;;;;7629:32:0;;;7581:91;-1:-1:-1;;;;;;;7747:25:0;;;7795:1;7747:25;;;:16;:25;;;;;;;;:50;;-1:-1:-1;;;;;;7747:50:0;;;;;;7905:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7879:23;;;:14;:23;;;;;;;:97;;;;;;;;;;;;;;7747:50;7879:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7879:97:0;-1:-1:-1;;;;;;7879:97:0;;;;;;;;;;;;;;;7747:50;6691:1314::o;1208:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1208:19:0;;;;-1:-1:-1;1208:19:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1208:19:0;;;;;:::o;2153:471::-;-1:-1:-1;;;;;2330:23:0;;;2223:7;2330:23;;;:14;:23;;;;;:34;;;2223:7;;;;2330:34;:48;2327:97;;2393:20;;;;:::i;:::-;;;;2327:97;-1:-1:-1;;;;;2436:23:0;;;2482:1;2436:23;;;:14;:23;;;;;:34;;;;:48;2433:97;;2499:20;;;;:::i;:::-;;;;2433:97;2595:22;2599:18;2595:1;:22;:::i;:::-;2588:29;2153:471;-1:-1:-1;;;2153:471:0:o;1811:159::-;-1:-1:-1;;;;;1902:23:0;;;1880:4;1902:23;;;:14;:23;;;;;:32;;;1880:4;;1902:32;:46;:61;;1958:5;1902:61;;;1951:4;1902:61;1895:68;1811:159;-1:-1:-1;;1811:159:0:o;3993:616::-;4130:10;4048:4;4121:20;;;:8;:20;;;;;;;;4120:21;4112:62;;;;-1:-1:-1;;;4112:62:0;;4966:2:1;4112:62:0;;;4948:21:1;5005:2;4985:18;;;4978:30;5044;5024:18;;;5017:58;5092:18;;4112:62:0;4764:352:1;4112:62:0;4222:23;4248:25;;;;;;;;4263:1;-1:-1:-1;;;;;4248:25:0;;;;;4267:5;4248:25;;;;;;;;:::i;:::-;;;4344:10;4327:28;;;;:16;:28;;;;;;;;:40;;;;-1:-1:-1;;;;;4327:40:0;;;;-1:-1:-1;;;;;;4327:40:0;;;;;;;;;;4222:51;;-1:-1:-1;4222:51:0;;4327:28;;;;-1:-1:-1;;;;;;4327:40:0;;-1:-1:-1;;;4327:40:0;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;4438:15:0;:17;;;-1:-1:-1;4438:15:0;:17;;;:::i;:::-;;;;-1:-1:-1;;4533:10:0;4524:20;;;;:8;:20;;;;;:27;;-1:-1:-1;;4524:27:0;4547:4;4524:27;;;;;;4547:4;3993:616;-1:-1:-1;;;3993:616:0:o;8749:501::-;8806:4;8895:16;;8877:15;:34;8869:74;;;;-1:-1:-1;;;8869:74:0;;5323:2:1;8869:74:0;;;5305:21:1;5362:2;5342:18;;;5335:30;5401:29;5381:18;;;5374:57;5448:18;;8869:74:0;5121:351:1;8869:74:0;-1:-1:-1;;;;;9010:25:0;;;9059:1;9010:25;;;:16;:25;;;;;:37;;9002:87;;;;-1:-1:-1;;;9002:87:0;;5679:2:1;9002:87:0;;;5661:21:1;5718:2;5698:18;;;5691:30;5757:25;5737:18;;;5730:53;5800:18;;9002:87:0;5477:347:1;9002:87:0;-1:-1:-1;;;;;;9174:25:0;;;9145:11;9174:25;;;:16;:25;;;;;;;;:37;;;;9159:53;;:14;:53;;;:60;;;-1:-1:-1;;;9159:60:0;;;;;8749:501::o;1976:171::-;-1:-1:-1;;;;;2073:23:0;;;2051:4;2073:23;;;:14;:23;;;;;:38;;;2051:4;;2073:38;:52;:67;;2135:5;2073:67;;2660:1289;2716:4;2821:1;2803:15;;:19;;;;:::i;:::-;2788:5;:12;:34;2780:64;;;;-1:-1:-1;;;2780:64:0;;6253:2:1;2780:64:0;;;6235:21:1;6292:2;6272:18;;;6265:30;-1:-1:-1;;;6311:18:1;;;6304:47;6368:18;;2780:64:0;6051:341:1;2780:64:0;2920:10;2911:20;;;;:8;:20;;;;;;;;:29;2903:70;;;;-1:-1:-1;;;2903:70:0;;4966:2:1;2903:70:0;;;4948:21:1;5005:2;4985:18;;;4978:30;5044;5024:18;;;5017:58;5092:18;;2903:70:0;4764:352:1;2903:70:0;3006:71;;;;;;;;3011:10;3006:71;;2984:19;3006:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3127:5;:23;;;;;;;;:::i;:::-;;3124:402;;3224:10;3203:18;;;:31;3124:402;;;3271:13;3262:5;:22;;;;;;;;:::i;:::-;;3259:267;;3355:10;3336:16;;;:29;3259:267;;;3402:19;3393:5;:28;;;;;;;;:::i;:::-;;3390:136;;3505:10;3480:22;;;:35;3390:136;3535:5;:19;;;;;;;;-1:-1:-1;3535:19:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3535:19:0;;;-1:-1:-1;;;;;3535:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3535:19:0;;;;-1:-1:-1;;;3535:19:0;;;;;;;;;3620:10;3605:26;;;:14;:26;;;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3535:19;3605:36;;;;;;;;;;;;;;;;;;;3535:19;3605:36;;;;;;;;;;;;;;;3535:19;3605:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:25;;;;;;;;;;;;;;3730:5;;3711:25;;;;;;;:::i;:::-;;;3807:10;3790:28;;;;:16;:28;;;;;;;;:40;;;;-1:-1:-1;;;;;3790:40:0;;;;-1:-1:-1;;;;;;3790:40:0;;;;;;;;;;3685:51;;-1:-1:-1;3685:51:0;;3790:28;;;;-1:-1:-1;;;;;;3790:40:0;;-1:-1:-1;;;3790:40:0;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;3899:10:0;3890:20;;;;:8;:20;;;;;:27;;-1:-1:-1;;3890:27:0;3913:4;3890:27;;;;;;3913:4;2660:1289;-1:-1:-1;;;;;2660:1289:0:o;4644:2012::-;4817:10;4704:4;4772:26;;;:14;:26;;;;;:41;4704:4;;-1:-1:-1;;;;;4772:41:0;;;:55;4764:91;;;;-1:-1:-1;;;4764:91:0;;3806:2:1;4764:91:0;;;3788:21:1;3845:2;3825:18;;;3818:30;-1:-1:-1;;;3864:18:1;;;3857:53;3927:18;;4764:91:0;3604:347:1;4764:91:0;-1:-1:-1;;;;;4917:17:0;;;;;;:8;:17;;;;;;;;4909:54;;;;-1:-1:-1;;;4909:54:0;;6599:2:1;4909:54:0;;;6581:21:1;6638:2;6618:18;;;6611:30;6677:26;6657:18;;;6650:54;6721:18;;4909:54:0;6397:348:1;4909:54:0;-1:-1:-1;;;;;5036:25:0;;;5085:1;5036:25;;;:16;:25;;;;;:37;;:51;5028:91;;;;-1:-1:-1;;;5028:91:0;;6952:2:1;5028:91:0;;;6934:21:1;6991:2;6971:18;;;6964:30;7030:29;7010:18;;;7003:57;7077:18;;5028:91:0;6750:351:1;5028:91:0;5238:14;-1:-1:-1;;;;;5204:25:0;;;;;;:16;:25;;;;;:30;-1:-1:-1;;;5204:30:0;;;;:48;;;;;;;;:::i;:::-;;5201:1197;;5348:10;5382:1;5333:26;;;:14;:26;;;;;:37;;;-1:-1:-1;;;;;5333:37:0;:51;;:106;;-1:-1:-1;5403:10:0;5437:1;5388:26;;;:14;:26;;;;;:37;;;-1:-1:-1;;;;;5388:37:0;:51;5333:106;5325:131;;;;-1:-1:-1;;;5325:131:0;;;;;;;:::i;:::-;5522:10;5556:1;5507:26;;;:14;:26;;;;;:37;;;-1:-1:-1;;;;;5507:37:0;5504:231;;5592:10;5577:26;;;;:14;:26;;;;;:37;;:46;;-1:-1:-1;;;;;;5577:46:0;-1:-1:-1;;;;;5577:46:0;;;;;5201:1197;;5504:231;5688:10;5673:26;;;;:14;:26;;;;;:37;;:47;;-1:-1:-1;;;;;;5673:47:0;-1:-1:-1;;;;;5673:47:0;;;;;5201:1197;;;5796:13;-1:-1:-1;;;;;5762:25:0;;;;;;:16;:25;;;;;:30;-1:-1:-1;;;5762:30:0;;;;:47;;;;;;;;:::i;:::-;;5759:639;;5904:10;5936:1;5889:26;;;:14;:26;;;;;:35;;;-1:-1:-1;;;;;5889:35:0;:49;5881:74;;;;-1:-1:-1;;;5881:74:0;;;;;;;:::i;:::-;6018:10;6003:26;;;;:14;:26;;;;;:35;;:45;;-1:-1:-1;;;;;;6003:45:0;-1:-1:-1;;;;;6003:45:0;;;;;5759:639;;;6110:19;-1:-1:-1;;;;;6076:25:0;;;;;;:16;:25;;;;;:30;-1:-1:-1;;;6076:30:0;;;;:53;;;;;;;;:::i;:::-;;6073:325;;6231:10;6269:1;6216:26;;;:14;:26;;;;;:41;;;-1:-1:-1;;;;;6216:41:0;:55;6208:80;;;;-1:-1:-1;;;6208:80:0;;;;;;;:::i;:::-;6351:10;6336:26;;;;:14;:26;;;;;:41;;:51;;-1:-1:-1;;;;;;6336:51:0;-1:-1:-1;;;;;6336:51:0;;;;;6073:325;-1:-1:-1;;;;;;6463:25:0;;;;;;;:16;:25;;;;;;;;:50;;-1:-1:-1;;;;;;6463:50:0;;;6503:10;6463:50;;;;;;6601:26;;;:14;:26;;;;;;6575:23;;;;;;:52;;;;;;;;;;;;6463:50;6575:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6575:52:0;;;;;;;;-1:-1:-1;;;;;;6575:52:0;;;;;;;;;;6463:50;4644:2012::o;8034:603::-;8093:4;8182:14;;-1:-1:-1;;;;;8182:14:0;8168:10;:28;8160:74;;;;-1:-1:-1;;;8160:74:0;;7649:2:1;8160:74:0;;;7631:21:1;7688:2;7668:18;;;7661:30;7727:34;7707:18;;;7700:62;-1:-1:-1;;;7778:18:1;;;7771:31;7819:19;;8160:74:0;7447:397:1;8160:74:0;8318:16;;8300:15;:34;8292:74;;;;-1:-1:-1;;;8292:74:0;;5323:2:1;8292:74:0;;;5305:21:1;5362:2;5342:18;;;5335:30;5401:29;5381:18;;;5374:57;5448:18;;8292:74:0;5121:351:1;8292:74:0;-1:-1:-1;;;;;8434:51:0;;;:24;;;;:14;:24;;;;;:39;;;;:51;8426:98;;;;-1:-1:-1;;;8426:98:0;;8051:2:1;8426:98:0;;;8033:21:1;8090:2;8070:18;;;8063:30;8129:34;8109:18;;;8102:62;-1:-1:-1;;;8180:18:1;;;8173:32;8222:19;;8426:98:0;7849:398:1;8426:98:0;-1:-1:-1;;;;;;8555:24:0;8535:17;8555:24;;;:14;:24;;;;;8590:11;;:18;;-1:-1:-1;;;;8590:18:0;-1:-1:-1;;;8590:18:0;;;8604:4;;8034:603::o;196:286:1:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;350:23;;-1:-1:-1;;;;;402:31:1;;392:42;;382:70;;448:1;445;438:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:1;;679:180;-1:-1:-1;679:180:1:o;1497:263::-;1563:6;1616:2;1604:9;1595:7;1591:23;1587:32;1584:52;;;1632:1;1629;1622:12;1584:52;1671:9;1658:23;1710:1;1703:5;1700:12;1690:40;;1726:1;1723;1716:12;2409:127;2470:10;2465:3;2461:20;2458:1;2451:31;2501:4;2498:1;2491:15;2525:4;2522:1;2515:15;2541:432;-1:-1:-1;;;;;2738:32:1;;2720:51;;2708:2;2693:18;;2801:1;2790:13;;2780:144;;2846:10;2841:3;2837:20;2834:1;2827:31;2881:4;2878:1;2871:15;2909:4;2906:1;2899:15;2780:144;2960:6;2955:2;2944:9;2940:18;2933:34;2541:432;;;;;:::o;4359:127::-;4420:10;4415:3;4411:20;4408:1;4401:31;4451:4;4448:1;4441:15;4475:4;4472:1;4465:15;4491:135;4530:3;4551:17;;;4548:43;;4571:18;;:::i;:::-;-1:-1:-1;4618:1:1;4607:13;;4491:135::o;4631:128::-;4698:9;;;4719:11;;;4716:37;;;4733:18;;:::i;5829:217::-;5869:1;5895;5885:132;;5939:10;5934:3;5930:20;5927:1;5920:31;5974:4;5971:1;5964:15;6002:4;5999:1;5992:15;5885:132;-1:-1:-1;6031:9:1;;5829:217::o;7106:336::-;7308:2;7290:21;;;7347:2;7327:18;;;7320:30;-1:-1:-1;;;7381:2:1;7366:18;;7359:42;7433:2;7418:18;;7106:336::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "declareWinner(address)": "db33f4f8",
    "getDevelopersRequired(address)": "6172b628",
    "getTeamByCaptain(address)": "89b3d661",
    "hackathonAdmin()": "b9670c54",
    "hackathonEndTime()": "6ead1acb",
    "hackathonStartTime()": "0a71e6fb",
    "hackersByAddress(address)": "9c044754",
    "isHacker(address)": "6f9a73ad",
    "isOnTeam(address)": "746c35e6",
    "isWinner(address)": "9d9ca28d",
    "registerAsCaptain(uint8)": "a9a7d7e9",
    "registerAsHacker(uint8)": "7e101f78",
    "removeTeamMember(address)": "14eba026",
    "selectTeamMember(address)": "ad15d422",
    "teamRequiresDesigner(address)": "6a81d8ec",
    "teamRequiresProductManager(address)": "a09fd05e",
    "teams(uint256)": "3ed2b77a",
    "teamsByCaptain(address)": "b3606500"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hackathonEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_captain\",\"type\":\"address\"}],\"name\":\"declareWinner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"}],\"name\":\"getDevelopersRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"}],\"name\":\"getTeamByCaptain\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"captainAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"developer1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"developer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"designer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"productManager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"winner\",\"type\":\"bool\"}],\"internalType\":\"struct Hackathon.Team\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hackathonAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hackathonEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hackathonStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hackersByAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"teamCaptain\",\"type\":\"address\"},{\"internalType\":\"enum Hackathon.Role\",\"name\":\"role\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isHacker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"}],\"name\":\"isOnTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"}],\"name\":\"isWinner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Hackathon.Role\",\"name\":\"_roll\",\"type\":\"uint8\"}],\"name\":\"registerAsCaptain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Hackathon.Role\",\"name\":\"_roll\",\"type\":\"uint8\"}],\"name\":\"registerAsHacker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"}],\"name\":\"removeTeamMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"}],\"name\":\"selectTeamMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"}],\"name\":\"teamRequiresDesigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"}],\"name\":\"teamRequiresProductManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"teams\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"captainAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"developer1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"developer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"designer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"productManager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"winner\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamsByCaptain\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"captainAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"developer1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"developer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"designer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"productManager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"winner\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Hackathon.sol\":\"Hackathon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":oz/=lib/openzeppelin-contracts/\",\":upgradeable-oz/=lib/openzeppelin-contracts-upgradeable/\"]},\"sources\":{\"src/Hackathon.sol\":{\"keccak256\":\"0x6076a2e03edb391b45a152a21d783d80b6af10afdce923368a40aa0306f41b2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5fd4b1d46bcbd5eaa5ffd734d010b4f81d2e2cb67589b92005f9d6c2568b158\",\"dweb:/ipfs/QmQ2RTB5TpYyxJetUst7g9upxsbn4JfVaEghwK9ZD8ecS1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_hackathonStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_hackathonEndTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_captain",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "declareWinner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_hacker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDevelopersRequired",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_hacker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTeamByCaptain",
          "outputs": [
            {
              "internalType": "struct Hackathon.Team",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "captainAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "developer1",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "developer2",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "designer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "productManager",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "winner",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hackathonAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hackathonEndTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hackathonStartTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hackersByAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "teamCaptain",
              "type": "address"
            },
            {
              "internalType": "enum Hackathon.Role",
              "name": "role",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isHacker",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_hacker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOnTeam",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_hacker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isWinner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum Hackathon.Role",
              "name": "_roll",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsCaptain",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum Hackathon.Role",
              "name": "_roll",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsHacker",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_hacker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeTeamMember",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_hacker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selectTeamMember",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_hacker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "teamRequiresDesigner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_hacker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "teamRequiresProductManager",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "teams",
          "outputs": [
            {
              "internalType": "address",
              "name": "captainAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "developer1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "developer2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "designer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "productManager",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "winner",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "teamsByCaptain",
          "outputs": [
            {
              "internalType": "address",
              "name": "captainAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "developer1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "developer2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "designer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "productManager",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "winner",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":oz/=lib/openzeppelin-contracts/",
        ":upgradeable-oz/=lib/openzeppelin-contracts-upgradeable/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Hackathon.sol": "Hackathon"
      },
      "libraries": {}
    },
    "sources": {
      "src/Hackathon.sol": {
        "keccak256": "0x6076a2e03edb391b45a152a21d783d80b6af10afdce923368a40aa0306f41b2d",
        "urls": [
          "bzz-raw://d5fd4b1d46bcbd5eaa5ffd734d010b4f81d2e2cb67589b92005f9d6c2568b158",
          "dweb:/ipfs/QmQ2RTB5TpYyxJetUst7g9upxsbn4JfVaEghwK9ZD8ecS1"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Hackathon.sol",
    "id": 790,
    "exportedSymbols": {
      "Hackathon": [
        789
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9221:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 789,
        "nodeType": "ContractDefinition",
        "src": "57:9195:0",
        "nodes": [
          {
            "id": 3,
            "nodeType": "VariableDeclaration",
            "src": "82:29:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "b9670c54",
            "mutability": "mutable",
            "name": "hackathonAdmin",
            "nameLocation": "97:14:0",
            "scope": 789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "82:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5,
            "nodeType": "VariableDeclaration",
            "src": "118:33:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "0a71e6fb",
            "mutability": "mutable",
            "name": "hackathonStartTime",
            "nameLocation": "133:18:0",
            "scope": 789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "118:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 7,
            "nodeType": "VariableDeclaration",
            "src": "158:31:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "6ead1acb",
            "mutability": "mutable",
            "name": "hackathonEndTime",
            "nameLocation": "173:16:0",
            "scope": 789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "158:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9,
            "nodeType": "VariableDeclaration",
            "src": "196:23:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "numberOfHackers",
            "nameLocation": "204:15:0",
            "scope": 789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "196:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 13,
            "nodeType": "EnumDefinition",
            "src": "231:47:0",
            "nodes": [],
            "canonicalName": "Hackathon.Role",
            "members": [
              {
                "id": 10,
                "name": "Developer",
                "nameLocation": "242:9:0",
                "nodeType": "EnumValue",
                "src": "242:9:0"
              },
              {
                "id": 11,
                "name": "Designer",
                "nameLocation": "253:8:0",
                "nodeType": "EnumValue",
                "src": "253:8:0"
              },
              {
                "id": 12,
                "name": "ProductManager",
                "nameLocation": "263:14:0",
                "nodeType": "EnumValue",
                "src": "263:14:0"
              }
            ],
            "name": "Role",
            "nameLocation": "236:4:0"
          },
          {
            "id": 19,
            "nodeType": "StructDefinition",
            "src": "306:167:0",
            "nodes": [],
            "canonicalName": "Hackathon.Hacker",
            "members": [
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "teamCaptain",
                "nameLocation": "401:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "393:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "393:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "role",
                "nameLocation": "462:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "457:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Role_$13",
                  "typeString": "enum Hackathon.Role"
                },
                "typeName": {
                  "id": 17,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 16,
                    "name": "Role",
                    "nameLocations": [
                      "457:4:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 13,
                    "src": "457:4:0"
                  },
                  "referencedDeclaration": 13,
                  "src": "457:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Role_$13",
                    "typeString": "enum Hackathon.Role"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Hacker",
            "nameLocation": "313:6:0",
            "scope": 789,
            "visibility": "public"
          },
          {
            "id": 32,
            "nodeType": "StructDefinition",
            "src": "573:335:0",
            "nodes": [],
            "canonicalName": "Hackathon.Team",
            "members": [
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "captainAddress",
                "nameLocation": "603:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "595:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 20,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "595:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "developer1",
                "nameLocation": "784:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "776:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 22,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "776:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "developer2",
                "nameLocation": "812:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "804:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 24,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "804:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "designer",
                "nameLocation": "840:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "832:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "832:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "productManager",
                "nameLocation": "866:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "858:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 28,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "858:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "winner",
                "nameLocation": "895:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "890:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 30,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "890:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Team",
            "nameLocation": "580:4:0",
            "scope": 789,
            "visibility": "public"
          },
          {
            "id": 36,
            "nodeType": "VariableDeclaration",
            "src": "969:40:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "6f9a73ad",
            "mutability": "mutable",
            "name": "isHacker",
            "nameLocation": "1001:8:0",
            "scope": 789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 35,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "977:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "969:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 34,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "988:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 41,
            "nodeType": "VariableDeclaration",
            "src": "1048:50:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "9c044754",
            "mutability": "mutable",
            "name": "hackersByAddress",
            "nameLocation": "1082:16:0",
            "scope": 789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
              "typeString": "mapping(address => struct Hackathon.Hacker)"
            },
            "typeName": {
              "id": 40,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1056:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1048:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                "typeString": "mapping(address => struct Hackathon.Hacker)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 39,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 38,
                  "name": "Hacker",
                  "nameLocations": [
                    "1067:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19,
                  "src": "1067:6:0"
                },
                "referencedDeclaration": 19,
                "src": "1067:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Hacker_$19_storage_ptr",
                  "typeString": "struct Hackathon.Hacker"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 46,
            "nodeType": "VariableDeclaration",
            "src": "1134:46:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "b3606500",
            "mutability": "mutable",
            "name": "teamsByCaptain",
            "nameLocation": "1166:14:0",
            "scope": 789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
              "typeString": "mapping(address => struct Hackathon.Team)"
            },
            "typeName": {
              "id": 45,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 42,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1142:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1134:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                "typeString": "mapping(address => struct Hackathon.Team)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 43,
                  "name": "Team",
                  "nameLocations": [
                    "1153:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32,
                  "src": "1153:4:0"
                },
                "referencedDeclaration": 32,
                "src": "1153:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                  "typeString": "struct Hackathon.Team"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 50,
            "nodeType": "VariableDeclaration",
            "src": "1208:19:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "3ed2b77a",
            "mutability": "mutable",
            "name": "teams",
            "nameLocation": "1222:5:0",
            "scope": 789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Team_$32_storage_$dyn_storage",
              "typeString": "struct Hackathon.Team[]"
            },
            "typeName": {
              "baseType": {
                "id": 48,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 47,
                  "name": "Team",
                  "nameLocations": [
                    "1208:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32,
                  "src": "1208:4:0"
                },
                "referencedDeclaration": 32,
                "src": "1208:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                  "typeString": "struct Hackathon.Team"
                }
              },
              "id": 49,
              "nodeType": "ArrayTypeName",
              "src": "1208:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Team_$32_storage_$dyn_storage_ptr",
                "typeString": "struct Hackathon.Team[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 71,
            "nodeType": "FunctionDefinition",
            "src": "1234:207:0",
            "nodes": [],
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "1301:140:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "hackathonAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1311:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 58,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1328:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1332:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1328:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1311:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:27:0"
                },
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62,
                      "name": "hackathonStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1348:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63,
                      "name": "_hackathonStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "1369:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1348:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "1348:40:0"
                },
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66,
                      "name": "hackathonEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1398:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67,
                      "name": "_hackathonEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1417:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1398:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:36:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_hackathonStartTime",
                  "nameLocation": "1254:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1246:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_hackathonEndTime",
                  "nameLocation": "1283:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1275:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1245:56:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:0:0"
            },
            "scope": 789,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89,
            "nodeType": "FunctionDefinition",
            "src": "1502:137:0",
            "nodes": [],
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1564:75:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 78,
                          "name": "hackersByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1581:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                            "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                          }
                        },
                        "id": 80,
                        "indexExpression": {
                          "id": 79,
                          "name": "_hacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "1598:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1581:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hacker_$19_storage",
                          "typeString": "struct Hackathon.Hacker storage ref"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1607:11:0",
                      "memberName": "teamCaptain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1581:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1630:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1622:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1622:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1581:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "1574:58:0"
                }
              ]
            },
            "functionSelector": "746c35e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOnTeam",
            "nameLocation": "1511:8:0",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_hacker",
                  "nameLocation": "1528:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1520:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:17:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1559:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1558:6:0"
            },
            "scope": 789,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 102,
            "nodeType": "FunctionDefinition",
            "src": "1681:124:0",
            "nodes": [],
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1758:47:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 97,
                      "name": "teamsByCaptain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1775:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                      }
                    },
                    "id": 99,
                    "indexExpression": {
                      "id": 98,
                      "name": "_hacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "1790:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1775:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Team_$32_storage",
                      "typeString": "struct Hackathon.Team storage ref"
                    }
                  },
                  "functionReturnParameters": 96,
                  "id": 100,
                  "nodeType": "Return",
                  "src": "1768:30:0"
                }
              ]
            },
            "functionSelector": "89b3d661",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTeamByCaptain",
            "nameLocation": "1690:16:0",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_hacker",
                  "nameLocation": "1715:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1707:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1706:17:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1746:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                    "typeString": "struct Hackathon.Team"
                  },
                  "typeName": {
                    "id": 94,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 93,
                      "name": "Team",
                      "nameLocations": [
                        "1746:4:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32,
                      "src": "1746:4:0"
                    },
                    "referencedDeclaration": 32,
                    "src": "1746:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                      "typeString": "struct Hackathon.Team"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1745:13:0"
            },
            "scope": 789,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 123,
            "nodeType": "FunctionDefinition",
            "src": "1811:159:0",
            "nodes": [],
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1885:85:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 109,
                            "name": "teamsByCaptain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "1902:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                              "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                            }
                          },
                          "id": 111,
                          "indexExpression": {
                            "id": 110,
                            "name": "_hacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104,
                            "src": "1917:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1902:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$32_storage",
                            "typeString": "struct Hackathon.Team storage ref"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1926:8:0",
                        "memberName": "designer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27,
                        "src": "1902:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1946:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1938:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 113,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1938:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1938:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1902:46:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "66616c7365",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1958:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1902:61:0",
                    "trueExpression": {
                      "hexValue": "74727565",
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1951:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 108,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "1895:68:0"
                }
              ]
            },
            "functionSelector": "6a81d8ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "teamRequiresDesigner",
            "nameLocation": "1820:20:0",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_hacker",
                  "nameLocation": "1849:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1841:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1841:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1840:17:0"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1880:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1879:6:0"
            },
            "scope": 789,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 144,
            "nodeType": "FunctionDefinition",
            "src": "1976:171:0",
            "nodes": [],
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "2056:91:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 130,
                            "name": "teamsByCaptain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "2073:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                              "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                            }
                          },
                          "id": 132,
                          "indexExpression": {
                            "id": 131,
                            "name": "_hacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "2088:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2073:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$32_storage",
                            "typeString": "struct Hackathon.Team storage ref"
                          }
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2097:14:0",
                        "memberName": "productManager",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29,
                        "src": "2073:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2123:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2115:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 134,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2115:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2115:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2073:52:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "66616c7365",
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2135:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2073:67:0",
                    "trueExpression": {
                      "hexValue": "74727565",
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2128:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 129,
                  "id": 142,
                  "nodeType": "Return",
                  "src": "2066:74:0"
                }
              ]
            },
            "functionSelector": "a09fd05e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "teamRequiresProductManager",
            "nameLocation": "1985:26:0",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "_hacker",
                  "nameLocation": "2020:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "2012:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2012:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2011:17:0"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "2051:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2050:6:0"
            },
            "scope": 789,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 188,
            "nodeType": "FunctionDefinition",
            "src": "2153:471:0",
            "nodes": [],
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "2231:393:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "numberOfDevelopers",
                      "nameLocation": "2295:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 187,
                      "src": "2287:26:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2287:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 154,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2316:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2287:30:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 155,
                          "name": "teamsByCaptain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "2330:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                            "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                          }
                        },
                        "id": 157,
                        "indexExpression": {
                          "id": 156,
                          "name": "_hacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "2345:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2330:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$32_storage",
                          "typeString": "struct Hackathon.Team storage ref"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2354:10:0",
                      "memberName": "developer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "2330:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2376:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2368:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 159,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2368:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2368:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2330:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 168,
                  "nodeType": "IfStatement",
                  "src": "2327:97:0",
                  "trueBody": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "2379:45:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2393:20:0",
                          "subExpression": {
                            "id": 164,
                            "name": "numberOfDevelopers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 152,
                            "src": "2393:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 166,
                        "nodeType": "ExpressionStatement",
                        "src": "2393:20:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 169,
                          "name": "teamsByCaptain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "2436:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                            "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                          }
                        },
                        "id": 171,
                        "indexExpression": {
                          "id": 170,
                          "name": "_hacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "2451:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2436:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$32_storage",
                          "typeString": "struct Hackathon.Team storage ref"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2460:10:0",
                      "memberName": "developer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "2436:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2482:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2474:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2474:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2474:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2436:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 182,
                  "nodeType": "IfStatement",
                  "src": "2433:97:0",
                  "trueBody": {
                    "id": 181,
                    "nodeType": "Block",
                    "src": "2485:45:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2499:20:0",
                          "subExpression": {
                            "id": 178,
                            "name": "numberOfDevelopers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 152,
                            "src": "2499:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 180,
                        "nodeType": "ExpressionStatement",
                        "src": "2499:20:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2595:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 184,
                      "name": "numberOfDevelopers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "2599:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2595:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 150,
                  "id": 186,
                  "nodeType": "Return",
                  "src": "2588:29:0"
                }
              ]
            },
            "functionSelector": "6172b628",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDevelopersRequired",
            "nameLocation": "2162:21:0",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "_hacker",
                  "nameLocation": "2192:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "2184:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2184:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2183:17:0"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "2223:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2223:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2222:9:0"
            },
            "scope": 789,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 319,
            "nodeType": "FunctionDefinition",
            "src": "2660:1289:0",
            "nodes": [],
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "2721:1228:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 197,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "2788:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$32_storage_$dyn_storage",
                              "typeString": "struct Hackathon.Team storage ref[] storage ref"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2794:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2788:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 199,
                            "name": "numberOfHackers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "2803:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2821:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "2803:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2788:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206d616e79206361707461696e73",
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2824:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a6a2976cad6d70737df6e811f0eb4f9de98f3131a0334c75ec86b16f04b4152",
                          "typeString": "literal_string \"Too many captains\""
                        },
                        "value": "Too many captains"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a6a2976cad6d70737df6e811f0eb4f9de98f3131a0334c75ec86b16f04b4152",
                          "typeString": "literal_string \"Too many captains\""
                        }
                      ],
                      "id": 196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2780:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2780:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "2780:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 207,
                            "name": "isHacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2911:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 210,
                          "indexExpression": {
                            "expression": {
                              "id": 208,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2920:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2924:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2920:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2911:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2935:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2911:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b657220697320616c72656164792072656769737465726564",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2942:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d218573455f318036afb0ba43b65863b6f428aab7b8aaf2c6c957fb20c74b65b",
                          "typeString": "literal_string \"Hacker is already registered\""
                        },
                        "value": "Hacker is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d218573455f318036afb0ba43b65863b6f428aab7b8aaf2c6c957fb20c74b65b",
                          "typeString": "literal_string \"Hacker is already registered\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2903:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2903:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2903:70:0"
                },
                {
                  "assignments": [
                    218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 218,
                      "mutability": "mutable",
                      "name": "newTeam",
                      "nameLocation": "2996:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 318,
                      "src": "2984:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                        "typeString": "struct Hackathon.Team"
                      },
                      "typeName": {
                        "id": 217,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 216,
                          "name": "Team",
                          "nameLocations": [
                            "2984:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32,
                          "src": "2984:4:0"
                        },
                        "referencedDeclaration": 32,
                        "src": "2984:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                          "typeString": "struct Hackathon.Team"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 240,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 220,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3011:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3015:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3011:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3031:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3023:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 222,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3023:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3023:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3043:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3035:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 226,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3035:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3035:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3055:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3047:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 230,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3047:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3047:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3067:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3059:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 234,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3059:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3059:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3071:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 219,
                      "name": "Team",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "3006:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Team_$32_storage_ptr_$",
                        "typeString": "type(struct Hackathon.Team storage pointer)"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3006:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                      "typeString": "struct Hackathon.Team memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2984:93:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Role_$13",
                      "typeString": "enum Hackathon.Role"
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 241,
                      "name": "_roll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "3127:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Role_$13",
                        "typeString": "enum Hackathon.Role"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 242,
                        "name": "Role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "3136:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Role_$13_$",
                          "typeString": "type(enum Hackathon.Role)"
                        }
                      },
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3141:9:0",
                      "memberName": "Developer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "3136:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Role_$13",
                        "typeString": "enum Hackathon.Role"
                      }
                    },
                    "src": "3127:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Role_$13",
                        "typeString": "enum Hackathon.Role"
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 253,
                        "name": "_roll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "3262:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 254,
                          "name": "Role",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "3271:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Role_$13_$",
                            "typeString": "type(enum Hackathon.Role)"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3276:8:0",
                        "memberName": "Designer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "3271:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      },
                      "src": "3262:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 265,
                          "name": "_roll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "3393:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Role_$13",
                            "typeString": "enum Hackathon.Role"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 266,
                            "name": "Role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "3402:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Role_$13_$",
                              "typeString": "type(enum Hackathon.Role)"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3407:14:0",
                          "memberName": "ProductManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "3402:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Role_$13",
                            "typeString": "enum Hackathon.Role"
                          }
                        },
                        "src": "3393:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 277,
                      "nodeType": "IfStatement",
                      "src": "3390:136:0",
                      "trueBody": {
                        "id": 276,
                        "nodeType": "Block",
                        "src": "3422:104:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 269,
                                  "name": "newTeam",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 218,
                                  "src": "3480:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                                    "typeString": "struct Hackathon.Team memory"
                                  }
                                },
                                "id": 271,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "3488:14:0",
                                "memberName": "productManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29,
                                "src": "3480:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 272,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3505:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3509:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3505:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3480:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 275,
                            "nodeType": "ExpressionStatement",
                            "src": "3480:35:0"
                          }
                        ]
                      }
                    },
                    "id": 278,
                    "nodeType": "IfStatement",
                    "src": "3259:267:0",
                    "trueBody": {
                      "id": 264,
                      "nodeType": "Block",
                      "src": "3285:91:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 257,
                                "name": "newTeam",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 218,
                                "src": "3336:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                                  "typeString": "struct Hackathon.Team memory"
                                }
                              },
                              "id": 259,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "3344:8:0",
                              "memberName": "designer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "3336:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 260,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3355:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3359:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3355:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3336:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 263,
                          "nodeType": "ExpressionStatement",
                          "src": "3336:29:0"
                        }
                      ]
                    }
                  },
                  "id": 279,
                  "nodeType": "IfStatement",
                  "src": "3124:402:0",
                  "trueBody": {
                    "id": 252,
                    "nodeType": "Block",
                    "src": "3151:94:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 245,
                              "name": "newTeam",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "3203:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                                "typeString": "struct Hackathon.Team memory"
                              }
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3211:10:0",
                            "memberName": "developer1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "3203:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 248,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3224:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3228:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3224:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3203:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 251,
                        "nodeType": "ExpressionStatement",
                        "src": "3203:31:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 283,
                        "name": "newTeam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "3546:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                          "typeString": "struct Hackathon.Team memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                          "typeString": "struct Hackathon.Team memory"
                        }
                      ],
                      "expression": {
                        "id": 280,
                        "name": "teams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "3535:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Team_$32_storage_$dyn_storage",
                          "typeString": "struct Hackathon.Team storage ref[] storage ref"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3541:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3535:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Team_$32_storage_$dyn_storage_ptr_$_t_struct$_Team_$32_storage_$returns$__$attached_to$_t_array$_t_struct$_Team_$32_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Hackathon.Team storage ref[] storage pointer,struct Hackathon.Team storage ref)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3535:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "3535:19:0"
                },
                {
                  "expression": {
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 286,
                        "name": "teamsByCaptain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "3605:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                          "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                        }
                      },
                      "id": 289,
                      "indexExpression": {
                        "expression": {
                          "id": 287,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3620:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3624:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3620:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3605:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_storage",
                        "typeString": "struct Hackathon.Team storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 290,
                      "name": "newTeam",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "3634:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                        "typeString": "struct Hackathon.Team memory"
                      }
                    },
                    "src": "3605:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Team_$32_storage",
                      "typeString": "struct Hackathon.Team storage ref"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "3605:36:0"
                },
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "mutability": "mutable",
                      "name": "newHacker",
                      "nameLocation": "3699:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 318,
                      "src": "3685:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hacker_$19_memory_ptr",
                        "typeString": "struct Hackathon.Hacker"
                      },
                      "typeName": {
                        "id": 294,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 293,
                          "name": "Hacker",
                          "nameLocations": [
                            "3685:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19,
                          "src": "3685:6:0"
                        },
                        "referencedDeclaration": 19,
                        "src": "3685:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hacker_$19_storage_ptr",
                          "typeString": "struct Hackathon.Hacker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 301,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 297,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3718:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3722:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3718:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 299,
                        "name": "_roll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "3730:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      ],
                      "id": 296,
                      "name": "Hacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "3711:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Hacker_$19_storage_ptr_$",
                        "typeString": "type(struct Hackathon.Hacker storage pointer)"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3711:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Hacker_$19_memory_ptr",
                      "typeString": "struct Hackathon.Hacker memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3685:51:0"
                },
                {
                  "expression": {
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 302,
                        "name": "hackersByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "3790:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                          "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                        }
                      },
                      "id": 305,
                      "indexExpression": {
                        "expression": {
                          "id": 303,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3807:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3811:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3807:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3790:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hacker_$19_storage",
                        "typeString": "struct Hackathon.Hacker storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 306,
                      "name": "newHacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "3821:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hacker_$19_memory_ptr",
                        "typeString": "struct Hackathon.Hacker memory"
                      }
                    },
                    "src": "3790:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Hacker_$19_storage",
                      "typeString": "struct Hackathon.Hacker storage ref"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:40:0"
                },
                {
                  "expression": {
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 309,
                        "name": "isHacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3890:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 312,
                      "indexExpression": {
                        "expression": {
                          "id": 310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3899:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3903:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3899:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3890:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3913:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3890:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "3890:27:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3936:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 195,
                  "id": 317,
                  "nodeType": "Return",
                  "src": "3929:11:0"
                }
              ]
            },
            "functionSelector": "a9a7d7e9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsCaptain",
            "nameLocation": "2669:17:0",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "_roll",
                  "nameLocation": "2692:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "2687:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Role_$13",
                    "typeString": "enum Hackathon.Role"
                  },
                  "typeName": {
                    "id": 190,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 189,
                      "name": "Role",
                      "nameLocations": [
                        "2687:4:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13,
                      "src": "2687:4:0"
                    },
                    "referencedDeclaration": 13,
                    "src": "2687:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Role_$13",
                      "typeString": "enum Hackathon.Role"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2686:12:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "2716:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2715:6:0"
            },
            "scope": 789,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 367,
            "nodeType": "FunctionDefinition",
            "src": "3993:616:0",
            "nodes": [],
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "4053:556:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4120:21:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 328,
                            "name": "isHacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4121:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 331,
                          "indexExpression": {
                            "expression": {
                              "id": 329,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4130:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4134:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4130:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4121:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b657220697320616c72656164792072656769737465726564",
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4143:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d218573455f318036afb0ba43b65863b6f428aab7b8aaf2c6c957fb20c74b65b",
                          "typeString": "literal_string \"Hacker is already registered\""
                        },
                        "value": "Hacker is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d218573455f318036afb0ba43b65863b6f428aab7b8aaf2c6c957fb20c74b65b",
                          "typeString": "literal_string \"Hacker is already registered\""
                        }
                      ],
                      "id": 327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4112:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4112:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "4112:62:0"
                },
                {
                  "assignments": [
                    338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 338,
                      "mutability": "mutable",
                      "name": "newHacker",
                      "nameLocation": "4236:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 366,
                      "src": "4222:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hacker_$19_memory_ptr",
                        "typeString": "struct Hackathon.Hacker"
                      },
                      "typeName": {
                        "id": 337,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 336,
                          "name": "Hacker",
                          "nameLocations": [
                            "4222:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19,
                          "src": "4222:6:0"
                        },
                        "referencedDeclaration": 19,
                        "src": "4222:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hacker_$19_storage_ptr",
                          "typeString": "struct Hackathon.Hacker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 346,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4263:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4255:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 340,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4255:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4255:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 344,
                        "name": "_roll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "4267:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      ],
                      "id": 339,
                      "name": "Hacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "4248:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Hacker_$19_storage_ptr_$",
                        "typeString": "type(struct Hackathon.Hacker storage pointer)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4248:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Hacker_$19_memory_ptr",
                      "typeString": "struct Hackathon.Hacker memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4222:51:0"
                },
                {
                  "expression": {
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 347,
                        "name": "hackersByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "4327:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                          "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                        }
                      },
                      "id": 350,
                      "indexExpression": {
                        "expression": {
                          "id": 348,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4344:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4348:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4344:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4327:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hacker_$19_storage",
                        "typeString": "struct Hackathon.Hacker storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 351,
                      "name": "newHacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 338,
                      "src": "4358:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hacker_$19_memory_ptr",
                        "typeString": "struct Hackathon.Hacker memory"
                      }
                    },
                    "src": "4327:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Hacker_$19_storage",
                      "typeString": "struct Hackathon.Hacker storage ref"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "4327:40:0"
                },
                {
                  "expression": {
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4438:17:0",
                    "subExpression": {
                      "id": 354,
                      "name": "numberOfHackers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "4438:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "4438:17:0"
                },
                {
                  "expression": {
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 357,
                        "name": "isHacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "4524:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 360,
                      "indexExpression": {
                        "expression": {
                          "id": 358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4533:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4537:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4533:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4524:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4547:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4524:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "4524:27:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4598:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 326,
                  "id": 365,
                  "nodeType": "Return",
                  "src": "4591:11:0"
                }
              ]
            },
            "functionSelector": "7e101f78",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsHacker",
            "nameLocation": "4002:16:0",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "_roll",
                  "nameLocation": "4024:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4019:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Role_$13",
                    "typeString": "enum Hackathon.Role"
                  },
                  "typeName": {
                    "id": 321,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 320,
                      "name": "Role",
                      "nameLocations": [
                        "4019:4:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13,
                      "src": "4019:4:0"
                    },
                    "referencedDeclaration": 13,
                    "src": "4019:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Role_$13",
                      "typeString": "enum Hackathon.Role"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4018:12:0"
            },
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4048:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4047:6:0"
            },
            "scope": 789,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 551,
            "nodeType": "FunctionDefinition",
            "src": "4644:2012:0",
            "nodes": [],
            "body": {
              "id": 550,
              "nodeType": "Block",
              "src": "4709:1947:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 375,
                              "name": "teamsByCaptain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "4772:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                              }
                            },
                            "id": 378,
                            "indexExpression": {
                              "expression": {
                                "id": 376,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4787:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4791:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4787:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4772:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$32_storage",
                              "typeString": "struct Hackathon.Team storage ref"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4799:14:0",
                          "memberName": "captainAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "4772:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 380,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4817:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4821:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4817:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4772:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f742061206361707461696e",
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4829:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_091da4f260601ac7246f5b79530807b3169c7c4c45059873a54ebf9968618b6d",
                          "typeString": "literal_string \"Caller is not a captain\""
                        },
                        "value": "Caller is not a captain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_091da4f260601ac7246f5b79530807b3169c7c4c45059873a54ebf9968618b6d",
                          "typeString": "literal_string \"Caller is not a captain\""
                        }
                      ],
                      "id": 374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4764:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4764:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "4764:91:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 387,
                          "name": "isHacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "4917:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 389,
                        "indexExpression": {
                          "id": 388,
                          "name": "_hacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "4926:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4917:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b6572206973206e6f742072656769737465726564",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4936:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a89cfc77786e5695e9f90ffedb92e8b59860e2d2227da77755036e8ace5565c1",
                          "typeString": "literal_string \"Hacker is not registered\""
                        },
                        "value": "Hacker is not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a89cfc77786e5695e9f90ffedb92e8b59860e2d2227da77755036e8ace5565c1",
                          "typeString": "literal_string \"Hacker is not registered\""
                        }
                      ],
                      "id": 386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4909:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4909:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "4909:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 394,
                              "name": "hackersByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "5036:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                              }
                            },
                            "id": 396,
                            "indexExpression": {
                              "id": 395,
                              "name": "_hacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 369,
                              "src": "5053:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5036:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hacker_$19_storage",
                              "typeString": "struct Hackathon.Hacker storage ref"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5062:11:0",
                          "memberName": "teamCaptain",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "5036:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5085:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5077:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 398,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5077:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5077:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5036:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b657220697320616c7265616479206f6e2061207465616d",
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5089:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29f9f8a3b91d9ee85f3e2554efeac34c3086d92d728a2e8c7def52182b964fc4",
                          "typeString": "literal_string \"Hacker is already on a team\""
                        },
                        "value": "Hacker is already on a team"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29f9f8a3b91d9ee85f3e2554efeac34c3086d92d728a2e8c7def52182b964fc4",
                          "typeString": "literal_string \"Hacker is already on a team\""
                        }
                      ],
                      "id": 393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5028:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5028:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:91:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Role_$13",
                      "typeString": "enum Hackathon.Role"
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 406,
                          "name": "hackersByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "5204:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                            "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                          }
                        },
                        "id": 408,
                        "indexExpression": {
                          "id": 407,
                          "name": "_hacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "5221:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5204:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hacker_$19_storage",
                          "typeString": "struct Hackathon.Hacker storage ref"
                        }
                      },
                      "id": 409,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5230:4:0",
                      "memberName": "role",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "5204:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Role_$13",
                        "typeString": "enum Hackathon.Role"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 410,
                        "name": "Role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "5238:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Role_$13_$",
                          "typeString": "type(enum Hackathon.Role)"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5243:9:0",
                      "memberName": "Developer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "5238:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Role_$13",
                        "typeString": "enum Hackathon.Role"
                      }
                    },
                    "src": "5204:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Role_$13",
                        "typeString": "enum Hackathon.Role"
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 468,
                            "name": "hackersByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "5762:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                              "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                            }
                          },
                          "id": 470,
                          "indexExpression": {
                            "id": 469,
                            "name": "_hacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 369,
                            "src": "5779:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5762:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hacker_$19_storage",
                            "typeString": "struct Hackathon.Hacker storage ref"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5788:4:0",
                        "memberName": "role",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "5762:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 472,
                          "name": "Role",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "5796:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Role_$13_$",
                            "typeString": "type(enum Hackathon.Role)"
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5801:8:0",
                        "memberName": "Designer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "5796:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      },
                      "src": "5762:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        },
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 498,
                              "name": "hackersByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "6076:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                              }
                            },
                            "id": 500,
                            "indexExpression": {
                              "id": 499,
                              "name": "_hacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 369,
                              "src": "6093:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6076:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hacker_$19_storage",
                              "typeString": "struct Hackathon.Hacker storage ref"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6102:4:0",
                          "memberName": "role",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "6076:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Role_$13",
                            "typeString": "enum Hackathon.Role"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 502,
                            "name": "Role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "6110:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Role_$13_$",
                              "typeString": "type(enum Hackathon.Role)"
                            }
                          },
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6115:14:0",
                          "memberName": "ProductManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "6110:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Role_$13",
                            "typeString": "enum Hackathon.Role"
                          }
                        },
                        "src": "6076:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 528,
                      "nodeType": "IfStatement",
                      "src": "6073:325:0",
                      "trueBody": {
                        "id": 527,
                        "nodeType": "Block",
                        "src": "6130:268:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 515,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 506,
                                        "name": "teamsByCaptain",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46,
                                        "src": "6216:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                          "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                        }
                                      },
                                      "id": 509,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 507,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "6231:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 508,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "6235:6:0",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "6231:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6216:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Team_$32_storage",
                                        "typeString": "struct Hackathon.Team storage ref"
                                      }
                                    },
                                    "id": 510,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6243:14:0",
                                    "memberName": "productManager",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 29,
                                    "src": "6216:41:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 513,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6269:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 512,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6261:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 511,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6261:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 514,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6261:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "6216:55:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "5465616d2069732066756c6c",
                                  "id": 516,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6273:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c3e2cf4152b712ea0b23d60bbf367bab194cb461f23f0d8d00e567e85593709c",
                                    "typeString": "literal_string \"Team is full\""
                                  },
                                  "value": "Team is full"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_c3e2cf4152b712ea0b23d60bbf367bab194cb461f23f0d8d00e567e85593709c",
                                    "typeString": "literal_string \"Team is full\""
                                  }
                                ],
                                "id": 505,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "6208:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6208:80:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 518,
                            "nodeType": "ExpressionStatement",
                            "src": "6208:80:0"
                          },
                          {
                            "expression": {
                              "id": 525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 519,
                                    "name": "teamsByCaptain",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46,
                                    "src": "6336:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                      "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                    }
                                  },
                                  "id": 522,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 520,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6351:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6355:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6351:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6336:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Team_$32_storage",
                                    "typeString": "struct Hackathon.Team storage ref"
                                  }
                                },
                                "id": 523,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "6363:14:0",
                                "memberName": "productManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29,
                                "src": "6336:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 524,
                                "name": "_hacker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 369,
                                "src": "6380:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6336:51:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 526,
                            "nodeType": "ExpressionStatement",
                            "src": "6336:51:0"
                          }
                        ]
                      }
                    },
                    "id": 529,
                    "nodeType": "IfStatement",
                    "src": "5759:639:0",
                    "trueBody": {
                      "id": 497,
                      "nodeType": "Block",
                      "src": "5810:249:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 476,
                                      "name": "teamsByCaptain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "5889:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                      }
                                    },
                                    "id": 479,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 477,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "5904:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 478,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5908:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5904:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5889:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$32_storage",
                                      "typeString": "struct Hackathon.Team storage ref"
                                    }
                                  },
                                  "id": 480,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5916:8:0",
                                  "memberName": "designer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 27,
                                  "src": "5889:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 483,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5936:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 482,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5928:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 481,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5928:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5928:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5889:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5465616d2069732066756c6c",
                                "id": 486,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5940:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c3e2cf4152b712ea0b23d60bbf367bab194cb461f23f0d8d00e567e85593709c",
                                  "typeString": "literal_string \"Team is full\""
                                },
                                "value": "Team is full"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c3e2cf4152b712ea0b23d60bbf367bab194cb461f23f0d8d00e567e85593709c",
                                  "typeString": "literal_string \"Team is full\""
                                }
                              ],
                              "id": 475,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "5881:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5881:74:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 488,
                          "nodeType": "ExpressionStatement",
                          "src": "5881:74:0"
                        },
                        {
                          "expression": {
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 489,
                                  "name": "teamsByCaptain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46,
                                  "src": "6003:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                    "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                  }
                                },
                                "id": 492,
                                "indexExpression": {
                                  "expression": {
                                    "id": 490,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6018:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 491,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6022:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6018:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6003:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$32_storage",
                                  "typeString": "struct Hackathon.Team storage ref"
                                }
                              },
                              "id": 493,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "6030:8:0",
                              "memberName": "designer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "6003:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 494,
                              "name": "_hacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 369,
                              "src": "6041:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6003:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 496,
                          "nodeType": "ExpressionStatement",
                          "src": "6003:45:0"
                        }
                      ]
                    }
                  },
                  "id": 530,
                  "nodeType": "IfStatement",
                  "src": "5201:1197:0",
                  "trueBody": {
                    "id": 467,
                    "nodeType": "Block",
                    "src": "5253:492:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 414,
                                      "name": "teamsByCaptain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "5333:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                      }
                                    },
                                    "id": 417,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 415,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "5348:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 416,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5352:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5348:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5333:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$32_storage",
                                      "typeString": "struct Hackathon.Team storage ref"
                                    }
                                  },
                                  "id": 418,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5360:10:0",
                                  "memberName": "developer1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23,
                                  "src": "5333:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 421,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5382:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 420,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5374:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 419,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5374:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 422,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5374:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5333:51:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 424,
                                      "name": "teamsByCaptain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "5388:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                      }
                                    },
                                    "id": 427,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 425,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "5403:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 426,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5407:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5403:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5388:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$32_storage",
                                      "typeString": "struct Hackathon.Team storage ref"
                                    }
                                  },
                                  "id": 428,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5415:10:0",
                                  "memberName": "developer2",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 25,
                                  "src": "5388:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 431,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5437:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 430,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5429:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 429,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5429:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5429:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5388:51:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5333:106:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5465616d2069732066756c6c",
                              "id": 435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5441:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c3e2cf4152b712ea0b23d60bbf367bab194cb461f23f0d8d00e567e85593709c",
                                "typeString": "literal_string \"Team is full\""
                              },
                              "value": "Team is full"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c3e2cf4152b712ea0b23d60bbf367bab194cb461f23f0d8d00e567e85593709c",
                                "typeString": "literal_string \"Team is full\""
                              }
                            ],
                            "id": 413,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5325:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5325:131:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 437,
                        "nodeType": "ExpressionStatement",
                        "src": "5325:131:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 438,
                                "name": "teamsByCaptain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "5507:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                  "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                }
                              },
                              "id": 441,
                              "indexExpression": {
                                "expression": {
                                  "id": 439,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5522:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5526:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5522:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5507:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$32_storage",
                                "typeString": "struct Hackathon.Team storage ref"
                              }
                            },
                            "id": 442,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5534:10:0",
                            "memberName": "developer1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "5507:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5556:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5548:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 443,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5548:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5548:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5507:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 465,
                          "nodeType": "Block",
                          "src": "5655:80:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 457,
                                      "name": "teamsByCaptain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "5673:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                      }
                                    },
                                    "id": 460,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 458,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "5688:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 459,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5692:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5688:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5673:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$32_storage",
                                      "typeString": "struct Hackathon.Team storage ref"
                                    }
                                  },
                                  "id": 461,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5700:10:0",
                                  "memberName": "developer2",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 25,
                                  "src": "5673:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 462,
                                  "name": "_hacker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 369,
                                  "src": "5713:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5673:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 464,
                              "nodeType": "ExpressionStatement",
                              "src": "5673:47:0"
                            }
                          ]
                        },
                        "id": 466,
                        "nodeType": "IfStatement",
                        "src": "5504:231:0",
                        "trueBody": {
                          "id": 456,
                          "nodeType": "Block",
                          "src": "5559:79:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 454,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 448,
                                      "name": "teamsByCaptain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "5577:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                      }
                                    },
                                    "id": 451,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 449,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "5592:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 450,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5596:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5592:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5577:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$32_storage",
                                      "typeString": "struct Hackathon.Team storage ref"
                                    }
                                  },
                                  "id": 452,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5604:10:0",
                                  "memberName": "developer1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23,
                                  "src": "5577:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 453,
                                  "name": "_hacker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 369,
                                  "src": "5616:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5577:46:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 455,
                              "nodeType": "ExpressionStatement",
                              "src": "5577:46:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 531,
                          "name": "hackersByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "6463:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                            "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                          }
                        },
                        "id": 533,
                        "indexExpression": {
                          "id": 532,
                          "name": "_hacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "6480:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6463:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hacker_$19_storage",
                          "typeString": "struct Hackathon.Hacker storage ref"
                        }
                      },
                      "id": 534,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6489:11:0",
                      "memberName": "teamCaptain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "6463:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 535,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6503:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6507:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6503:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6463:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "6463:50:0"
                },
                {
                  "expression": {
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 539,
                        "name": "teamsByCaptain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "6575:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                          "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                        }
                      },
                      "id": 541,
                      "indexExpression": {
                        "id": 540,
                        "name": "_hacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "6590:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6575:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_storage",
                        "typeString": "struct Hackathon.Team storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 542,
                        "name": "teamsByCaptain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "6601:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                          "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                        }
                      },
                      "id": 545,
                      "indexExpression": {
                        "expression": {
                          "id": 543,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6616:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6620:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6616:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6601:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_storage",
                        "typeString": "struct Hackathon.Team storage ref"
                      }
                    },
                    "src": "6575:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Team_$32_storage",
                      "typeString": "struct Hackathon.Team storage ref"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "6575:52:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6645:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 373,
                  "id": 549,
                  "nodeType": "Return",
                  "src": "6638:11:0"
                }
              ]
            },
            "functionSelector": "ad15d422",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selectTeamMember",
            "nameLocation": "4653:16:0",
            "parameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "_hacker",
                  "nameLocation": "4678:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "4670:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4670:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4669:17:0"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "4704:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4704:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4703:6:0"
            },
            "scope": 789,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 698,
            "nodeType": "FunctionDefinition",
            "src": "6691:1314:0",
            "nodes": [],
            "body": {
              "id": 697,
              "nodeType": "Block",
              "src": "6756:1249:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 559,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6826:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6832:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6826:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 561,
                          "name": "hackathonStartTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "6844:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6826:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e666572656e63652068617320737461727465642c2063616e6e6f742072656d6f7665207465616d206d656d626572",
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6864:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b8e5a1e5a1fe0f86b8a67cc1f6b42192c83181ec84e0fe422c143a498b37186",
                          "typeString": "literal_string \"Conference has started, cannot remove team member\""
                        },
                        "value": "Conference has started, cannot remove team member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b8e5a1e5a1fe0f86b8a67cc1f6b42192c83181ec84e0fe422c143a498b37186",
                          "typeString": "literal_string \"Conference has started, cannot remove team member\""
                        }
                      ],
                      "id": 558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6818:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6818:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "6818:98:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 567,
                              "name": "teamsByCaptain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "6980:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                              }
                            },
                            "id": 570,
                            "indexExpression": {
                              "expression": {
                                "id": 568,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6995:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6999:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6995:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6980:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$32_storage",
                              "typeString": "struct Hackathon.Team storage ref"
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7007:14:0",
                          "memberName": "captainAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "6980:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 572,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7025:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7029:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7025:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6980:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f742061206361707461696e",
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7037:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_091da4f260601ac7246f5b79530807b3169c7c4c45059873a54ebf9968618b6d",
                          "typeString": "literal_string \"Caller is not a captain\""
                        },
                        "value": "Caller is not a captain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_091da4f260601ac7246f5b79530807b3169c7c4c45059873a54ebf9968618b6d",
                          "typeString": "literal_string \"Caller is not a captain\""
                        }
                      ],
                      "id": 566,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6972:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6972:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "6972:91:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 579,
                              "name": "teamsByCaptain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "7135:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                              }
                            },
                            "id": 581,
                            "indexExpression": {
                              "id": 580,
                              "name": "_hacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "7150:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7135:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$32_storage",
                              "typeString": "struct Hackathon.Team storage ref"
                            }
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7159:14:0",
                          "memberName": "captainAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "7135:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 583,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7177:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7181:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7177:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7135:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b6572206973206e6f74206f6e207468652063616c6c65722773207465616d",
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7189:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_338e51d3e089cd75615db0de7fc73ceb771586c01a395a5e2d7114c4bf0e4b4e",
                          "typeString": "literal_string \"Hacker is not on the caller's team\""
                        },
                        "value": "Hacker is not on the caller's team"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_338e51d3e089cd75615db0de7fc73ceb771586c01a395a5e2d7114c4bf0e4b4e",
                          "typeString": "literal_string \"Hacker is not on the caller's team\""
                        }
                      ],
                      "id": 578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7127:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7127:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "7127:99:0"
                },
                {
                  "assignments": [
                    591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 591,
                      "mutability": "mutable",
                      "name": "team",
                      "nameLocation": "7250:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 697,
                      "src": "7237:17:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                        "typeString": "struct Hackathon.Team"
                      },
                      "typeName": {
                        "id": 590,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 589,
                          "name": "Team",
                          "nameLocations": [
                            "7237:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32,
                          "src": "7237:4:0"
                        },
                        "referencedDeclaration": 32,
                        "src": "7237:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                          "typeString": "struct Hackathon.Team"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 596,
                  "initialValue": {
                    "baseExpression": {
                      "id": 592,
                      "name": "teamsByCaptain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "7257:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                      }
                    },
                    "id": 595,
                    "indexExpression": {
                      "expression": {
                        "id": 593,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7272:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7276:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7272:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7257:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Team_$32_storage",
                      "typeString": "struct Hackathon.Team storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7237:46:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 597,
                        "name": "team",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "7297:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                          "typeString": "struct Hackathon.Team storage pointer"
                        }
                      },
                      "id": 598,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7302:10:0",
                      "memberName": "developer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "7297:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 599,
                      "name": "_hacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "7316:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7297:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 611,
                          "name": "team",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "7394:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                            "typeString": "struct Hackathon.Team storage pointer"
                          }
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7399:10:0",
                        "memberName": "developer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25,
                        "src": "7394:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 613,
                        "name": "_hacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "7413:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7394:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 625,
                            "name": "team",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "7491:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                              "typeString": "struct Hackathon.Team storage pointer"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7496:8:0",
                          "memberName": "designer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "7491:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 627,
                          "name": "_hacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 553,
                          "src": "7508:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7491:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 639,
                              "name": "team",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "7584:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                                "typeString": "struct Hackathon.Team storage pointer"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7589:14:0",
                            "memberName": "productManager",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29,
                            "src": "7584:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 641,
                            "name": "_hacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "7607:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7584:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 653,
                        "nodeType": "IfStatement",
                        "src": "7581:91:0",
                        "trueBody": {
                          "id": 652,
                          "nodeType": "Block",
                          "src": "7615:57:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 643,
                                    "name": "team",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 591,
                                    "src": "7629:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                                      "typeString": "struct Hackathon.Team storage pointer"
                                    }
                                  },
                                  "id": 645,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7634:14:0",
                                  "memberName": "productManager",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 29,
                                  "src": "7629:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 648,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7659:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 647,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7651:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 646,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7651:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 649,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7651:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7629:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 651,
                              "nodeType": "ExpressionStatement",
                              "src": "7629:32:0"
                            }
                          ]
                        }
                      },
                      "id": 654,
                      "nodeType": "IfStatement",
                      "src": "7488:184:0",
                      "trueBody": {
                        "id": 638,
                        "nodeType": "Block",
                        "src": "7516:51:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 629,
                                  "name": "team",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 591,
                                  "src": "7530:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                                    "typeString": "struct Hackathon.Team storage pointer"
                                  }
                                },
                                "id": 631,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "7535:8:0",
                                "memberName": "designer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 27,
                                "src": "7530:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 634,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7554:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 633,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7546:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 632,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7546:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7546:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7530:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 637,
                            "nodeType": "ExpressionStatement",
                            "src": "7530:26:0"
                          }
                        ]
                      }
                    },
                    "id": 655,
                    "nodeType": "IfStatement",
                    "src": "7391:281:0",
                    "trueBody": {
                      "id": 624,
                      "nodeType": "Block",
                      "src": "7421:53:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 615,
                                "name": "team",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 591,
                                "src": "7435:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                                  "typeString": "struct Hackathon.Team storage pointer"
                                }
                              },
                              "id": 617,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "7440:10:0",
                              "memberName": "developer2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25,
                              "src": "7435:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 620,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7461:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7453:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 618,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7453:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7453:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7435:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 623,
                          "nodeType": "ExpressionStatement",
                          "src": "7435:28:0"
                        }
                      ]
                    }
                  },
                  "id": 656,
                  "nodeType": "IfStatement",
                  "src": "7294:378:0",
                  "trueBody": {
                    "id": 610,
                    "nodeType": "Block",
                    "src": "7324:53:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 601,
                              "name": "team",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "7338:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                                "typeString": "struct Hackathon.Team storage pointer"
                              }
                            },
                            "id": 603,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7343:10:0",
                            "memberName": "developer1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "7338:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7364:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7356:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 604,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7356:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7356:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7338:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 609,
                        "nodeType": "ExpressionStatement",
                        "src": "7338:28:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 657,
                          "name": "hackersByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "7747:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                            "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                          }
                        },
                        "id": 659,
                        "indexExpression": {
                          "id": 658,
                          "name": "_hacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 553,
                          "src": "7764:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7747:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hacker_$19_storage",
                          "typeString": "struct Hackathon.Hacker storage ref"
                        }
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7773:11:0",
                      "memberName": "teamCaptain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "7747:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7795:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7787:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7787:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7787:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7747:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "7747:50:0"
                },
                {
                  "expression": {
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 667,
                        "name": "teamsByCaptain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "7879:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                          "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                        }
                      },
                      "id": 669,
                      "indexExpression": {
                        "id": 668,
                        "name": "_hacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "7894:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7879:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_storage",
                        "typeString": "struct Hackathon.Team storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7918:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7910:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 671,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7910:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7910:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7930:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7922:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 675,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7922:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7922:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7942:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7934:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 679,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7934:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7934:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7954:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7946:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 683,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7946:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7946:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7966:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7958:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 687,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7958:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7958:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7970:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 670,
                        "name": "Team",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "7905:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Team_$32_storage_ptr_$",
                          "typeString": "type(struct Hackathon.Team storage pointer)"
                        }
                      },
                      "id": 692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7905:71:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                        "typeString": "struct Hackathon.Team memory"
                      }
                    },
                    "src": "7879:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Team_$32_storage",
                      "typeString": "struct Hackathon.Team storage ref"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "7879:97:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7994:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 557,
                  "id": 696,
                  "nodeType": "Return",
                  "src": "7987:11:0"
                }
              ]
            },
            "functionSelector": "14eba026",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeTeamMember",
            "nameLocation": "6700:16:0",
            "parameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 553,
                  "mutability": "mutable",
                  "name": "_hacker",
                  "nameLocation": "6725:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "6717:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6717:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6716:17:0"
            },
            "returnParameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "6751:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6751:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6750:6:0"
            },
            "scope": 789,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 747,
            "nodeType": "FunctionDefinition",
            "src": "8034:603:0",
            "nodes": [],
            "body": {
              "id": 746,
              "nodeType": "Block",
              "src": "8098:539:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 706,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8168:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8172:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8168:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 708,
                          "name": "hackathonAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "8182:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8168:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420746865206861636b6174686f6e2061646d696e",
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8198:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ea363ab55bb0bcde2268eac8041e69e6bcd218dff18f00da526946993c0c0b6",
                          "typeString": "literal_string \"Caller is not the hackathon admin\""
                        },
                        "value": "Caller is not the hackathon admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ea363ab55bb0bcde2268eac8041e69e6bcd218dff18f00da526946993c0c0b6",
                          "typeString": "literal_string \"Caller is not the hackathon admin\""
                        }
                      ],
                      "id": 705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8160:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8160:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "8160:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 714,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8300:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8306:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8300:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 716,
                          "name": "hackathonEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "8318:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8300:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b6174686f6e20686173206e6f7420656e64656420796574",
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8336:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_133c56abdb1c0bfc3cdfa618a273a3e0e3d7be3bf4928639a3fb8f40b9276573",
                          "typeString": "literal_string \"Hackathon has not ended yet\""
                        },
                        "value": "Hackathon has not ended yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_133c56abdb1c0bfc3cdfa618a273a3e0e3d7be3bf4928639a3fb8f40b9276573",
                          "typeString": "literal_string \"Hackathon has not ended yet\""
                        }
                      ],
                      "id": 713,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8292:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8292:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "8292:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 722,
                              "name": "teamsByCaptain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "8434:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                              }
                            },
                            "id": 724,
                            "indexExpression": {
                              "id": 723,
                              "name": "_captain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 700,
                              "src": "8449:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8434:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$32_storage",
                              "typeString": "struct Hackathon.Team storage ref"
                            }
                          },
                          "id": 725,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8459:14:0",
                          "memberName": "captainAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "8434:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 726,
                          "name": "_captain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 700,
                          "src": "8477:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8434:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f74206173736f63696174656420776974682061207465616d",
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8487:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e162ee8f2daff3a760e0135f1e5f4c6731fffbb65a9ed28dd4bfc9ceaf2a97b",
                          "typeString": "literal_string \"Address not associated with a team\""
                        },
                        "value": "Address not associated with a team"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e162ee8f2daff3a760e0135f1e5f4c6731fffbb65a9ed28dd4bfc9ceaf2a97b",
                          "typeString": "literal_string \"Address not associated with a team\""
                        }
                      ],
                      "id": 721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8426:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8426:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "8426:98:0"
                },
                {
                  "assignments": [
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "team",
                      "nameLocation": "8548:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 746,
                      "src": "8535:17:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                        "typeString": "struct Hackathon.Team"
                      },
                      "typeName": {
                        "id": 732,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 731,
                          "name": "Team",
                          "nameLocations": [
                            "8535:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32,
                          "src": "8535:4:0"
                        },
                        "referencedDeclaration": 32,
                        "src": "8535:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                          "typeString": "struct Hackathon.Team"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "baseExpression": {
                      "id": 734,
                      "name": "teamsByCaptain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "8555:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                      }
                    },
                    "id": 736,
                    "indexExpression": {
                      "id": 735,
                      "name": "_captain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 700,
                      "src": "8570:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8555:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Team_$32_storage",
                      "typeString": "struct Hackathon.Team storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8535:44:0"
                },
                {
                  "expression": {
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 738,
                        "name": "team",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "8590:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                          "typeString": "struct Hackathon.Team storage pointer"
                        }
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8595:6:0",
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "8590:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8604:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8590:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "8590:18:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8626:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 704,
                  "id": 745,
                  "nodeType": "Return",
                  "src": "8619:11:0"
                }
              ]
            },
            "functionSelector": "db33f4f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declareWinner",
            "nameLocation": "8043:13:0",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "_captain",
                  "nameLocation": "8065:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "8057:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8057:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8056:18:0"
            },
            "returnParameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "8093:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8093:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8092:6:0"
            },
            "scope": 789,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 788,
            "nodeType": "FunctionDefinition",
            "src": "8749:501:0",
            "nodes": [],
            "body": {
              "id": 787,
              "nodeType": "Block",
              "src": "8811:439:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 755,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8877:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8883:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8877:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 757,
                          "name": "hackathonEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "8895:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8877:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b6174686f6e20686173206e6f7420656e64656420796574",
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8913:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_133c56abdb1c0bfc3cdfa618a273a3e0e3d7be3bf4928639a3fb8f40b9276573",
                          "typeString": "literal_string \"Hackathon has not ended yet\""
                        },
                        "value": "Hackathon has not ended yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_133c56abdb1c0bfc3cdfa618a273a3e0e3d7be3bf4928639a3fb8f40b9276573",
                          "typeString": "literal_string \"Hackathon has not ended yet\""
                        }
                      ],
                      "id": 754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8869:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8869:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "8869:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 763,
                              "name": "hackersByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "9010:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                              }
                            },
                            "id": 765,
                            "indexExpression": {
                              "id": 764,
                              "name": "_hacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 749,
                              "src": "9027:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9010:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hacker_$19_storage",
                              "typeString": "struct Hackathon.Hacker storage ref"
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9036:11:0",
                          "memberName": "teamCaptain",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "9010:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9059:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9051:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 767,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9051:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9051:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9010:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b6572206973206e6f74206f6e2061207465616d",
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9063:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_716034bad2f23ff0cafbb14c008222432b23ded9f8a98ff3fd9095350846430d",
                          "typeString": "literal_string \"Hacker is not on a team\""
                        },
                        "value": "Hacker is not on a team"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_716034bad2f23ff0cafbb14c008222432b23ded9f8a98ff3fd9095350846430d",
                          "typeString": "literal_string \"Hacker is not on a team\""
                        }
                      ],
                      "id": 762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9002:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9002:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "9002:87:0"
                },
                {
                  "assignments": [
                    776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 776,
                      "mutability": "mutable",
                      "name": "winner",
                      "nameLocation": "9150:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 787,
                      "src": "9145:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 775,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9145:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 784,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 777,
                        "name": "teamsByCaptain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "9159:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                          "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                        }
                      },
                      "id": 782,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 778,
                            "name": "hackersByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "9174:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                              "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                            }
                          },
                          "id": 780,
                          "indexExpression": {
                            "id": 779,
                            "name": "_hacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "9191:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9174:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hacker_$19_storage",
                            "typeString": "struct Hackathon.Hacker storage ref"
                          }
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9200:11:0",
                        "memberName": "teamCaptain",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15,
                        "src": "9174:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9159:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_storage",
                        "typeString": "struct Hackathon.Team storage ref"
                      }
                    },
                    "id": 783,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9213:6:0",
                    "memberName": "winner",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 31,
                    "src": "9159:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9145:74:0"
                },
                {
                  "expression": {
                    "id": 785,
                    "name": "winner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 776,
                    "src": "9237:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 753,
                  "id": 786,
                  "nodeType": "Return",
                  "src": "9230:13:0"
                }
              ]
            },
            "functionSelector": "9d9ca28d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isWinner",
            "nameLocation": "8758:8:0",
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "_hacker",
                  "nameLocation": "8775:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "8767:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8767:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8766:17:0"
            },
            "returnParameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "8806:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8806:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8805:6:0"
            },
            "scope": 789,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Hackathon",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          789
        ],
        "name": "Hackathon",
        "nameLocation": "66:9:0",
        "scope": 790,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 0
}
