{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hackathonEndTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_captain",
          "type": "address"
        }
      ],
      "name": "declareWinner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hackathonAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hackathonEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hackathonStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hackersByAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "teamCaptain",
          "type": "address"
        },
        {
          "internalType": "enum Hackathon.Role",
          "name": "role",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isHacker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hacker",
          "type": "address"
        }
      ],
      "name": "isOnTeam",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Hackathon.Role",
          "name": "_roll",
          "type": "uint8"
        }
      ],
      "name": "registerAsCaptain",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Hackathon.Role",
          "name": "_roll",
          "type": "uint8"
        }
      ],
      "name": "registerAsHacker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hacker",
          "type": "address"
        }
      ],
      "name": "removeTeamMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hacker",
          "type": "address"
        }
      ],
      "name": "selectTeamMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "teams",
      "outputs": [
        {
          "internalType": "address",
          "name": "captainAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "developer1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "developer2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "designer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "productManager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "winner",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "teamsByCaptain",
      "outputs": [
        {
          "internalType": "address",
          "name": "captainAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "developer1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "developer2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "designer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "productManager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "winner",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161111a38038061111a83398101604081905261002f9161004f565b600080546001600160a01b03191633179055600191909155600255610073565b6000806040838503121561006257600080fd5b505080516020909101519092909150565b611098806100826000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637e101f781161008c578063ad15d42211610066578063ad15d42214610211578063b360650014610224578063b9670c541461027e578063db33f4f8146102a957600080fd5b80637e101f78146101a85780639c044754146101bb578063a9a7d7e9146101fe57600080fd5b80630a71e6fb146100d457806314eba026146100f05780633ed2b77a146101135780636ead1acb146101695780636f9a73ad14610172578063746c35e614610195575b600080fd5b6100dd60015481565b6040519081526020015b60405180910390f35b6101036100fe366004610f38565b6102bc565b60405190151581526020016100e7565b610126610121366004610f68565b6104de565b604080516001600160a01b0397881681529587166020870152938616938501939093529084166060840152909216608082015290151560a082015260c0016100e7565b6100dd60025481565b610103610180366004610f38565b60046020526000908152604090205460ff1681565b6101036101a3366004610f38565b61053f565b6101036101b6366004610f81565b610570565b6101f06101c9366004610f38565b6005602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b6040516100e7929190610fb8565b61010361020c366004610f81565b6106a1565b61010361021f366004610f38565b6109ad565b610126610232366004610f38565b600660205260009081526040902080546001820154600283015460038401546004909401546001600160a01b03938416949284169391821692821691811690600160a01b900460ff1686565b600054610291906001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b6101036102b7366004610f38565b610e0d565b6000600154421061032e5760405162461bcd60e51b815260206004820152603160248201527f436f6e666572656e63652068617320737461727465642c2063616e6e6f74207260448201527032b6b7bb32903a32b0b69036b2b6b132b960791b60648201526084015b60405180910390fd5b336000818152600660205260409020546001600160a01b03161461038e5760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba10309031b0b83a30b4b760491b6044820152606401610325565b6001600160a01b038281166000908152600660205260409020541633146104025760405162461bcd60e51b815260206004820152602260248201527f4861636b6572206973206e6f74206f6e207468652063616c6c65722773207465604482015261616d60f01b6064820152608401610325565b506001600160a01b03908116600081815260056020908152604080832080546001600160a01b0319908116909155815160c081018352848152808401858152818401868152606083018781526080840188815260a08501898152998952600690975294909620915182549089169084161782555160018281018054928a1692851692909217909155945160028201805491891691841691909117905591516003830180549188169190921617905590516004909101805493511515600160a01b026001600160a81b031990941691909416179190911790915590565b600781815481106104ee57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b03938416955091831693908316929081169190811690600160a01b900460ff1686565b6001600160a01b0381811660009081526005602052604081205490911661056757600061056a565b60015b92915050565b3360009081526004602052604081205460ff16156105d05760405162461bcd60e51b815260206004820152601c60248201527f4861636b657220697320616c72656164792072656769737465726564000000006044820152606401610325565b6000604051806040016040528060006001600160a01b031681526020018460028111156105ff576105ff610fa2565b9052336000908152600560209081526040909120825181546001600160a01b03919091166001600160a01b0319821681178355928401519394508493919283916001600160a81b03191617600160a01b83600281111561066157610661610fa2565b021790555050600380549150600061067883610ff3565b9091555050336000908152600460205260409020805460ff191660019081179091559392505050565b6000600380546106b1919061101a565b600754106106f55760405162461bcd60e51b8152602060048201526011602482015270546f6f206d616e79206361707461696e7360781b6044820152606401610325565b3360009081526004602052604090205460ff166107545760405162461bcd60e51b815260206004820152601c60248201527f4861636b657220697320616c72656164792072656769737465726564000000006044820152606401610325565b6040805160c081018252338152600060208201819052918101829052606081018290526080810182905260a081018290529083600281111561079857610798610fa2565b036107a8573360208201526107ec565b60018360028111156107bc576107bc610fa2565b036107cc573360608201526107ec565b60028360028111156107e0576107e0610fa2565b036107ec573360808201525b6007805460018082018355600092835283517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600590930292830180546001600160a01b03199081166001600160a01b0393841617909155602080870180517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689870180548516918616919091179055604080890180517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a89018054871691881691909117905560608a0180517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b8a018054881691891691909117905560808b0180517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c909a01805460a08e0180519c8b166001600160a81b031992831617600160a01b9d15158e0217909255338d52600690975293909a209a518b548716908816178b5592518a8801805487169188169190911790555160028a018054861691871691909117905590516003890180549094169085161790925594516004909601805491519690921694169390931793151590910292909217905592915050565b3360008181526006602052604081205490916001600160a01b0390911614610a115760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba10309031b0b83a30b4b760491b6044820152606401610325565b6001600160a01b03821660009081526004602052604090205460ff16610a795760405162461bcd60e51b815260206004820152601860248201527f4861636b6572206973206e6f74207265676973746572656400000000000000006044820152606401610325565b6001600160a01b0382811660009081526005602052604090205416610ae05760405162461bcd60e51b815260206004820152601b60248201527f4861636b657220697320616c7265616479206f6e2061207465616d00000000006044820152606401610325565b60006001600160a01b038316600090815260056020526040902054600160a01b900460ff166002811115610b1657610b16610fa2565b03610bf857336000908152600660205260409020600101546001600160a01b03161580610b5c5750336000908152600660205260409020600201546001600160a01b0316155b610b785760405162461bcd60e51b81526004016103259061103c565b336000908152600660205260409020600101546001600160a01b0316610bc85733600090815260066020526040902060010180546001600160a01b0319166001600160a01b038416179055610d3c565b33600090815260066020526040902060020180546001600160a01b0319166001600160a01b038416179055610d3c565b60016001600160a01b038316600090815260056020526040902054600160a01b900460ff166002811115610c2e57610c2e610fa2565b03610c9c57336000908152600660205260409020600301546001600160a01b031615610c6c5760405162461bcd60e51b81526004016103259061103c565b33600090815260066020526040902060030180546001600160a01b0319166001600160a01b038416179055610d3c565b60026001600160a01b038316600090815260056020526040902054600160a01b900460ff166002811115610cd257610cd2610fa2565b03610d3c57336000908152600660205260409020600401546001600160a01b031615610d105760405162461bcd60e51b81526004016103259061103c565b33600090815260066020526040902060040180546001600160a01b0319166001600160a01b0384161790555b506001600160a01b03908116600081815260056020908152604080832080546001600160a01b031990811633908117909255908452600690925280832093835290912082548154831690851617815560018381015482820180548516918716919091179055600280850154908301805485169187169190911790556003808501549083018054851691871691909117905560049384018054949092018054938416949095169384178555905460ff600160a01b91829004161515026001600160a81b03199092169092171790915590565b600080546001600160a01b03163314610e725760405162461bcd60e51b815260206004820152602160248201527f43616c6c6572206973206e6f7420746865206861636b6174686f6e2061646d696044820152603760f91b6064820152608401610325565b6002544211610ec35760405162461bcd60e51b815260206004820152601b60248201527f4861636b6174686f6e20686173206e6f7420656e6465642079657400000000006044820152606401610325565b6001600160a01b03808316600081815260066020526040902054909116146105675760405162461bcd60e51b815260206004820152602260248201527f41646472657373206e6f74206173736f63696174656420776974682061207465604482015261616d60f01b6064820152608401610325565b600060208284031215610f4a57600080fd5b81356001600160a01b0381168114610f6157600080fd5b9392505050565b600060208284031215610f7a57600080fd5b5035919050565b600060208284031215610f9357600080fd5b813560038110610f6157600080fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03831681526040810160038310610fe657634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b60006001820161101357634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261103757634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600c908201526b1519585b481a5cc8199d5b1b60a21b60408201526060019056fea26469706673582212208bbc17fa4ff734da022d029225b4d67d65eff66f71ed1fcb433f6e142b2f65de64736f6c63430008130033",
    "sourceMap": "57:6909:0:-:0;;;1234:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1311:14;:27;;-1:-1:-1;;;;;;1311:27:0;1328:10;1311:27;;;;1348:40;;;;1398:16;:36;57:6909;;14:245:1;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;-1:-1:-1;;193:16:1;;249:2;234:18;;;228:25;193:16;;228:25;;-1:-1:-1;14:245:1:o;:::-;57:6909:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "57:6909:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;118:33;;;;;;;;;160:25:1;;;148:2;133:18;118:33:0;;;;;;;;5435:869;;;;;;:::i;:::-;;:::i;:::-;;;652:14:1;;645:22;627:41;;615:2;600:18;5435:869:0;487:187:1;1208:19:0;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1201:15:1;;;1183:34;;1253:15;;;1248:2;1233:18;;1226:43;1305:15;;;1285:18;;;1278:43;;;;1357:15;;;1352:2;1337:18;;1330:43;1410:15;;;1404:3;1389:19;;1382:44;1470:14;;1463:22;1163:3;1442:19;;1435:51;1132:3;1117:19;1208::0;864:628:1;158:31:0;;;;;;969:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1502:152;;;;;;:::i;:::-;;:::i;2737:616::-;;;;;;:::i;:::-;;:::i;1048:50::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1048:50:0;;;-1:-1:-1;;;1048:50:0;;;;;;;;;;;;;;:::i;1691:1002::-;;;;;;:::i;:::-;;:::i;3388:2012::-;;;;;;:::i;:::-;;:::i;1134:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1134:46:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1134:46:0;;;;;;82:29;;;;;-1:-1:-1;;;;;82:29:0;;;;;;-1:-1:-1;;;;;2498:32:1;;;2480:51;;2468:2;2453:18;82:29:0;2334:203:1;6333:523:0;;;;;;:::i;:::-;;:::i;5435:869::-;5495:4;5588:18;;5570:15;:36;5562:98;;;;-1:-1:-1;;;5562:98:0;;2744:2:1;5562:98:0;;;2726:21:1;2783:2;2763:18;;;2756:30;2822:34;2802:18;;;2795:62;-1:-1:-1;;;2873:18:1;;;2866:47;2930:19;;5562:98:0;;;;;;;;;5769:10;5724:26;;;;:14;:26;;;;;:41;-1:-1:-1;;;;;5724:41:0;:55;5716:91;;;;-1:-1:-1;;;5716:91:0;;3162:2:1;5716:91:0;;;3144:21:1;3201:2;3181:18;;;3174:30;-1:-1:-1;;;3220:18:1;;;3213:53;3283:18;;5716:91:0;2960:347:1;5716:91:0;-1:-1:-1;;;;;5879:23:0;;;;;;;:14;:23;;;;;:38;;5921:10;5879:52;5871:99;;;;-1:-1:-1;;;5871:99:0;;3514:2:1;5871:99:0;;;3496:21:1;3553:2;3533:18;;;3526:30;3592:34;3572:18;;;3565:62;-1:-1:-1;;;3643:18:1;;;3636:32;3685:19;;5871:99:0;3312:398:1;5871:99:0;-1:-1:-1;;;;;;6046:25:0;;;6094:1;6046:25;;;:16;:25;;;;;;;;:50;;-1:-1:-1;;;;;;6046:50:0;;;;;;6204:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6178:23;;;:14;:23;;;;;;;:97;;;;;;;;;;;;;;6046:50;6178:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6178:97:0;-1:-1:-1;;;;;;6178:97:0;;;;;;;;;;;;;;;6046:50;5435:869::o;1208:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1208:19:0;;;;-1:-1:-1;1208:19:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1208:19:0;;;;;:::o;1502:152::-;-1:-1:-1;;;;;1581:25:0;;;1559:4;1581:25;;;:16;:25;;;;;:37;1559:4;;1581:37;:66;;1642:5;1581:66;;;1635:4;1581:66;1574:73;1502:152;-1:-1:-1;;1502:152:0:o;2737:616::-;2874:10;2792:4;2865:20;;;:8;:20;;;;;;;;2864:21;2856:62;;;;-1:-1:-1;;;2856:62:0;;3917:2:1;2856:62:0;;;3899:21:1;3956:2;3936:18;;;3929:30;3995;3975:18;;;3968:58;4043:18;;2856:62:0;3715:352:1;2856:62:0;2966:23;2992:25;;;;;;;;3007:1;-1:-1:-1;;;;;2992:25:0;;;;;3011:5;2992:25;;;;;;;;:::i;:::-;;;3088:10;3071:28;;;;:16;:28;;;;;;;;:40;;;;-1:-1:-1;;;;;3071:40:0;;;;-1:-1:-1;;;;;;3071:40:0;;;;;;;;;;2966:51;;-1:-1:-1;2966:51:0;;3071:28;;;;-1:-1:-1;;;;;;3071:40:0;;-1:-1:-1;;;3071:40:0;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;3182:15:0;:17;;;-1:-1:-1;3182:15:0;:17;;;:::i;:::-;;;;-1:-1:-1;;3277:10:0;3268:20;;;;:8;:20;;;;;:27;;-1:-1:-1;;3268:27:0;3291:4;3268:27;;;;;;3291:4;2737:616;-1:-1:-1;;;2737:616:0:o;1691:1002::-;1747:4;1852:1;1834:15;;:19;;;;:::i;:::-;1819:5;:12;:34;1811:64;;;;-1:-1:-1;;;1811:64:0;;4733:2:1;1811:64:0;;;4715:21:1;4772:2;4752:18;;;4745:30;-1:-1:-1;;;4791:18:1;;;4784:47;4848:18;;1811:64:0;4531:341:1;1811:64:0;1951:10;1942:20;;;;:8;:20;;;;;;;;1934:61;;;;-1:-1:-1;;;1934:61:0;;3917:2:1;1934:61:0;;;3899:21:1;3956:2;3936:18;;;3929:30;3995;3975:18;;;3968:58;4043:18;;1934:61:0;3715:352:1;1934:61:0;2027:71;;;;;;;;2032:10;2027:71;;2005:19;2027:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2148:5;:23;;;;;;;;:::i;:::-;;2145:402;;2245:10;2224:18;;;:31;2145:402;;;2292:13;2283:5;:22;;;;;;;;:::i;:::-;;2280:267;;2376:10;2357:16;;;:29;2280:267;;;2423:19;2414:5;:28;;;;;;;;:::i;:::-;;2411:136;;2526:10;2501:22;;;:35;2411:136;2556:5;:19;;;;;;;;-1:-1:-1;2556:19:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2556:19:0;;;-1:-1:-1;;;;;2556:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2556:19:0;;;;-1:-1:-1;;;2556:19:0;;;;;;;;;2641:10;2626:26;;:14;:26;;;;;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2556:19;2626:36;;;;;;;;;;;;;;;;;2556:19;2626:36;;;;;;;;;;;;;;;;2556:19;2626:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2556:19;;-1:-1:-1;;1691:1002:0:o;3388:2012::-;3561:10;3448:4;3516:26;;;:14;:26;;;;;:41;3448:4;;-1:-1:-1;;;;;3516:41:0;;;:55;3508:91;;;;-1:-1:-1;;;3508:91:0;;3162:2:1;3508:91:0;;;3144:21:1;3201:2;3181:18;;;3174:30;-1:-1:-1;;;3220:18:1;;;3213:53;3283:18;;3508:91:0;2960:347:1;3508:91:0;-1:-1:-1;;;;;3661:17:0;;;;;;:8;:17;;;;;;;;3653:54;;;;-1:-1:-1;;;3653:54:0;;5079:2:1;3653:54:0;;;5061:21:1;5118:2;5098:18;;;5091:30;5157:26;5137:18;;;5130:54;5201:18;;3653:54:0;4877:348:1;3653:54:0;-1:-1:-1;;;;;3780:25:0;;;3829:1;3780:25;;;:16;:25;;;;;:37;;3772:91;;;;-1:-1:-1;;;3772:91:0;;5432:2:1;3772:91:0;;;5414:21:1;5471:2;5451:18;;;5444:30;5510:29;5490:18;;;5483:57;5557:18;;3772:91:0;5230:351:1;3772:91:0;3982:14;-1:-1:-1;;;;;3948:25:0;;;;;;:16;:25;;;;;:30;-1:-1:-1;;;3948:30:0;;;;:48;;;;;;;;:::i;:::-;;3945:1197;;4092:10;4126:1;4077:26;;;:14;:26;;;;;:37;;;-1:-1:-1;;;;;4077:37:0;:51;;:106;;-1:-1:-1;4147:10:0;4181:1;4132:26;;;:14;:26;;;;;:37;;;-1:-1:-1;;;;;4132:37:0;:51;4077:106;4069:131;;;;-1:-1:-1;;;4069:131:0;;;;;;;:::i;:::-;4266:10;4300:1;4251:26;;;:14;:26;;;;;:37;;;-1:-1:-1;;;;;4251:37:0;4248:231;;4336:10;4321:26;;;;:14;:26;;;;;:37;;:46;;-1:-1:-1;;;;;;4321:46:0;-1:-1:-1;;;;;4321:46:0;;;;;3945:1197;;4248:231;4432:10;4417:26;;;;:14;:26;;;;;:37;;:47;;-1:-1:-1;;;;;;4417:47:0;-1:-1:-1;;;;;4417:47:0;;;;;3945:1197;;;4540:13;-1:-1:-1;;;;;4506:25:0;;;;;;:16;:25;;;;;:30;-1:-1:-1;;;4506:30:0;;;;:47;;;;;;;;:::i;:::-;;4503:639;;4648:10;4680:1;4633:26;;;:14;:26;;;;;:35;;;-1:-1:-1;;;;;4633:35:0;:49;4625:74;;;;-1:-1:-1;;;4625:74:0;;;;;;;:::i;:::-;4762:10;4747:26;;;;:14;:26;;;;;:35;;:45;;-1:-1:-1;;;;;;4747:45:0;-1:-1:-1;;;;;4747:45:0;;;;;4503:639;;;4854:19;-1:-1:-1;;;;;4820:25:0;;;;;;:16;:25;;;;;:30;-1:-1:-1;;;4820:30:0;;;;:53;;;;;;;;:::i;:::-;;4817:325;;4975:10;5013:1;4960:26;;;:14;:26;;;;;:41;;;-1:-1:-1;;;;;4960:41:0;:55;4952:80;;;;-1:-1:-1;;;4952:80:0;;;;;;;:::i;:::-;5095:10;5080:26;;;;:14;:26;;;;;:41;;:51;;-1:-1:-1;;;;;;5080:51:0;-1:-1:-1;;;;;5080:51:0;;;;;4817:325;-1:-1:-1;;;;;;5207:25:0;;;;;;;:16;:25;;;;;;;;:50;;-1:-1:-1;;;;;;5207:50:0;;;5247:10;5207:50;;;;;;5345:26;;;:14;:26;;;;;;5319:23;;;;;;:52;;;;;;;;;;;;5207:50;5319:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5319:52:0;;;;;;;;-1:-1:-1;;;;;;5319:52:0;;;;;;;;;;5207:50;3388:2012::o;6333:523::-;6396:4;6485:14;;-1:-1:-1;;;;;6485:14:0;6471:10;:28;6463:74;;;;-1:-1:-1;;;6463:74:0;;6129:2:1;6463:74:0;;;6111:21:1;6168:2;6148:18;;;6141:30;6207:34;6187:18;;;6180:62;-1:-1:-1;;;6258:18:1;;;6251:31;6299:19;;6463:74:0;5927:397:1;6463:74:0;6621:16;;6603:15;:34;6595:74;;;;-1:-1:-1;;;6595:74:0;;6531:2:1;6595:74:0;;;6513:21:1;6570:2;6550:18;;;6543:30;6609:29;6589:18;;;6582:57;6656:18;;6595:74:0;6329:351:1;6595:74:0;-1:-1:-1;;;;;6737:51:0;;;:24;;;;:14;:24;;;;;:39;;;;:51;6729:98;;;;-1:-1:-1;;;6729:98:0;;6887:2:1;6729:98:0;;;6869:21:1;6926:2;6906:18;;;6899:30;6965:34;6945:18;;;6938:62;-1:-1:-1;;;7016:18:1;;;7009:32;7058:19;;6729:98:0;6685:398:1;196:286;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;350:23;;-1:-1:-1;;;;;402:31:1;;392:42;;382:70;;448:1;445;438:12;382:70;471:5;196:286;-1:-1:-1;;;196:286:1:o;679:180::-;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:1;;679:180;-1:-1:-1;679:180:1:o;1497:263::-;1563:6;1616:2;1604:9;1595:7;1591:23;1587:32;1584:52;;;1632:1;1629;1622:12;1584:52;1671:9;1658:23;1710:1;1703:5;1700:12;1690:40;;1726:1;1723;1716:12;1765:127;1826:10;1821:3;1817:20;1814:1;1807:31;1857:4;1854:1;1847:15;1881:4;1878:1;1871:15;1897:432;-1:-1:-1;;;;;2094:32:1;;2076:51;;2064:2;2049:18;;2157:1;2146:13;;2136:144;;2202:10;2197:3;2193:20;2190:1;2183:31;2237:4;2234:1;2227:15;2265:4;2262:1;2255:15;2136:144;2316:6;2311:2;2300:9;2296:18;2289:34;1897:432;;;;;:::o;4072:232::-;4111:3;4132:17;;;4129:140;;4191:10;4186:3;4182:20;4179:1;4172:31;4226:4;4223:1;4216:15;4254:4;4251:1;4244:15;4129:140;-1:-1:-1;4296:1:1;4285:13;;4072:232::o;4309:217::-;4349:1;4375;4365:132;;4419:10;4414:3;4410:20;4407:1;4400:31;4454:4;4451:1;4444:15;4482:4;4479:1;4472:15;4365:132;-1:-1:-1;4511:9:1;;4309:217::o;5586:336::-;5788:2;5770:21;;;5827:2;5807:18;;;5800:30;-1:-1:-1;;;5861:2:1;5846:18;;5839:42;5913:2;5898:18;;5586:336::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "declareWinner(address)": "db33f4f8",
    "hackathonAdmin()": "b9670c54",
    "hackathonEndTime()": "6ead1acb",
    "hackathonStartTime()": "0a71e6fb",
    "hackersByAddress(address)": "9c044754",
    "isHacker(address)": "6f9a73ad",
    "isOnTeam(address)": "746c35e6",
    "registerAsCaptain(uint8)": "a9a7d7e9",
    "registerAsHacker(uint8)": "7e101f78",
    "removeTeamMember(address)": "14eba026",
    "selectTeamMember(address)": "ad15d422",
    "teams(uint256)": "3ed2b77a",
    "teamsByCaptain(address)": "b3606500"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hackathonEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_captain\",\"type\":\"address\"}],\"name\":\"declareWinner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hackathonAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hackathonEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hackathonStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hackersByAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"teamCaptain\",\"type\":\"address\"},{\"internalType\":\"enum Hackathon.Role\",\"name\":\"role\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isHacker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"}],\"name\":\"isOnTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Hackathon.Role\",\"name\":\"_roll\",\"type\":\"uint8\"}],\"name\":\"registerAsCaptain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Hackathon.Role\",\"name\":\"_roll\",\"type\":\"uint8\"}],\"name\":\"registerAsHacker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"}],\"name\":\"removeTeamMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"}],\"name\":\"selectTeamMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"teams\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"captainAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"developer1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"developer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"designer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"productManager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"winner\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamsByCaptain\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"captainAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"developer1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"developer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"designer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"productManager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"winner\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Hackathon.sol\":\"Hackathon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":oz/=lib/openzeppelin-contracts/\",\":upgradeable-oz/=lib/openzeppelin-contracts-upgradeable/\"]},\"sources\":{\"src/Hackathon.sol\":{\"keccak256\":\"0xde62f11034e050206466dffeaff59656ed8d30d5078d0e0bbfa9b53647757dd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f53ede8ba6b6964c2b6b00e7ec2dfca39dbbbc2d2fb00b313fe3721f5425188\",\"dweb:/ipfs/QmQQgVyYSHWwfq7ZNvjyGzf5gCuUvmAJmxwAex4DxjVCLY\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_hackathonStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_hackathonEndTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_captain",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "declareWinner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hackathonAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hackathonEndTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hackathonStartTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hackersByAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "teamCaptain",
              "type": "address"
            },
            {
              "internalType": "enum Hackathon.Role",
              "name": "role",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isHacker",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_hacker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOnTeam",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum Hackathon.Role",
              "name": "_roll",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsCaptain",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum Hackathon.Role",
              "name": "_roll",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsHacker",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_hacker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeTeamMember",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_hacker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selectTeamMember",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "teams",
          "outputs": [
            {
              "internalType": "address",
              "name": "captainAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "developer1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "developer2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "designer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "productManager",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "winner",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "teamsByCaptain",
          "outputs": [
            {
              "internalType": "address",
              "name": "captainAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "developer1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "developer2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "designer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "productManager",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "winner",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":oz/=lib/openzeppelin-contracts/",
        ":upgradeable-oz/=lib/openzeppelin-contracts-upgradeable/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Hackathon.sol": "Hackathon"
      },
      "libraries": {}
    },
    "sources": {
      "src/Hackathon.sol": {
        "keccak256": "0xde62f11034e050206466dffeaff59656ed8d30d5078d0e0bbfa9b53647757dd8",
        "urls": [
          "bzz-raw://7f53ede8ba6b6964c2b6b00e7ec2dfca39dbbbc2d2fb00b313fe3721f5425188",
          "dweb:/ipfs/QmQQgVyYSHWwfq7ZNvjyGzf5gCuUvmAJmxwAex4DxjVCLY"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Hackathon.sol",
    "id": 547,
    "exportedSymbols": {
      "Hackathon": [
        546
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:6934:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 546,
        "nodeType": "ContractDefinition",
        "src": "57:6909:0",
        "nodes": [
          {
            "id": 3,
            "nodeType": "VariableDeclaration",
            "src": "82:29:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "b9670c54",
            "mutability": "mutable",
            "name": "hackathonAdmin",
            "nameLocation": "97:14:0",
            "scope": 546,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "82:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5,
            "nodeType": "VariableDeclaration",
            "src": "118:33:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "0a71e6fb",
            "mutability": "mutable",
            "name": "hackathonStartTime",
            "nameLocation": "133:18:0",
            "scope": 546,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "118:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 7,
            "nodeType": "VariableDeclaration",
            "src": "158:31:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "6ead1acb",
            "mutability": "mutable",
            "name": "hackathonEndTime",
            "nameLocation": "173:16:0",
            "scope": 546,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "158:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9,
            "nodeType": "VariableDeclaration",
            "src": "196:23:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "numberOfHackers",
            "nameLocation": "204:15:0",
            "scope": 546,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "196:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 13,
            "nodeType": "EnumDefinition",
            "src": "231:47:0",
            "nodes": [],
            "canonicalName": "Hackathon.Role",
            "members": [
              {
                "id": 10,
                "name": "Developer",
                "nameLocation": "242:9:0",
                "nodeType": "EnumValue",
                "src": "242:9:0"
              },
              {
                "id": 11,
                "name": "Designer",
                "nameLocation": "253:8:0",
                "nodeType": "EnumValue",
                "src": "253:8:0"
              },
              {
                "id": 12,
                "name": "ProductManager",
                "nameLocation": "263:14:0",
                "nodeType": "EnumValue",
                "src": "263:14:0"
              }
            ],
            "name": "Role",
            "nameLocation": "236:4:0"
          },
          {
            "id": 19,
            "nodeType": "StructDefinition",
            "src": "306:167:0",
            "nodes": [],
            "canonicalName": "Hackathon.Hacker",
            "members": [
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "teamCaptain",
                "nameLocation": "401:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "393:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "393:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "role",
                "nameLocation": "462:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "457:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Role_$13",
                  "typeString": "enum Hackathon.Role"
                },
                "typeName": {
                  "id": 17,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 16,
                    "name": "Role",
                    "nameLocations": [
                      "457:4:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 13,
                    "src": "457:4:0"
                  },
                  "referencedDeclaration": 13,
                  "src": "457:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Role_$13",
                    "typeString": "enum Hackathon.Role"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Hacker",
            "nameLocation": "313:6:0",
            "scope": 546,
            "visibility": "public"
          },
          {
            "id": 32,
            "nodeType": "StructDefinition",
            "src": "573:335:0",
            "nodes": [],
            "canonicalName": "Hackathon.Team",
            "members": [
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "captainAddress",
                "nameLocation": "603:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "595:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 20,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "595:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "developer1",
                "nameLocation": "784:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "776:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 22,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "776:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "developer2",
                "nameLocation": "812:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "804:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 24,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "804:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "designer",
                "nameLocation": "840:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "832:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "832:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "productManager",
                "nameLocation": "866:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "858:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 28,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "858:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "winner",
                "nameLocation": "895:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "890:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 30,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "890:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Team",
            "nameLocation": "580:4:0",
            "scope": 546,
            "visibility": "public"
          },
          {
            "id": 36,
            "nodeType": "VariableDeclaration",
            "src": "969:40:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "6f9a73ad",
            "mutability": "mutable",
            "name": "isHacker",
            "nameLocation": "1001:8:0",
            "scope": 546,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 35,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "977:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "969:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 34,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "988:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 41,
            "nodeType": "VariableDeclaration",
            "src": "1048:50:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "9c044754",
            "mutability": "mutable",
            "name": "hackersByAddress",
            "nameLocation": "1082:16:0",
            "scope": 546,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
              "typeString": "mapping(address => struct Hackathon.Hacker)"
            },
            "typeName": {
              "id": 40,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1056:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1048:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                "typeString": "mapping(address => struct Hackathon.Hacker)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 39,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 38,
                  "name": "Hacker",
                  "nameLocations": [
                    "1067:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19,
                  "src": "1067:6:0"
                },
                "referencedDeclaration": 19,
                "src": "1067:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Hacker_$19_storage_ptr",
                  "typeString": "struct Hackathon.Hacker"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 46,
            "nodeType": "VariableDeclaration",
            "src": "1134:46:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "b3606500",
            "mutability": "mutable",
            "name": "teamsByCaptain",
            "nameLocation": "1166:14:0",
            "scope": 546,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
              "typeString": "mapping(address => struct Hackathon.Team)"
            },
            "typeName": {
              "id": 45,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 42,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1142:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1134:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                "typeString": "mapping(address => struct Hackathon.Team)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 43,
                  "name": "Team",
                  "nameLocations": [
                    "1153:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32,
                  "src": "1153:4:0"
                },
                "referencedDeclaration": 32,
                "src": "1153:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                  "typeString": "struct Hackathon.Team"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 50,
            "nodeType": "VariableDeclaration",
            "src": "1208:19:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "3ed2b77a",
            "mutability": "mutable",
            "name": "teams",
            "nameLocation": "1222:5:0",
            "scope": 546,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Team_$32_storage_$dyn_storage",
              "typeString": "struct Hackathon.Team[]"
            },
            "typeName": {
              "baseType": {
                "id": 48,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 47,
                  "name": "Team",
                  "nameLocations": [
                    "1208:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32,
                  "src": "1208:4:0"
                },
                "referencedDeclaration": 32,
                "src": "1208:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                  "typeString": "struct Hackathon.Team"
                }
              },
              "id": 49,
              "nodeType": "ArrayTypeName",
              "src": "1208:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Team_$32_storage_$dyn_storage_ptr",
                "typeString": "struct Hackathon.Team[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 71,
            "nodeType": "FunctionDefinition",
            "src": "1234:207:0",
            "nodes": [],
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "1301:140:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "hackathonAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1311:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 58,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1328:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1332:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1328:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1311:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:27:0"
                },
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62,
                      "name": "hackathonStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1348:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63,
                      "name": "_hackathonStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "1369:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1348:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "1348:40:0"
                },
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66,
                      "name": "hackathonEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1398:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67,
                      "name": "_hackathonEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1417:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1398:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:36:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_hackathonStartTime",
                  "nameLocation": "1254:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1246:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_hackathonEndTime",
                  "nameLocation": "1283:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1275:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1245:56:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:0:0"
            },
            "scope": 546,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92,
            "nodeType": "FunctionDefinition",
            "src": "1502:152:0",
            "nodes": [],
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1564:90:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 78,
                            "name": "hackersByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "1581:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                              "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                            }
                          },
                          "id": 80,
                          "indexExpression": {
                            "id": 79,
                            "name": "_hacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "1598:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1581:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hacker_$19_storage",
                            "typeString": "struct Hackathon.Hacker storage ref"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1607:11:0",
                        "memberName": "teamCaptain",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15,
                        "src": "1581:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1630:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1622:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 82,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1622:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1622:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1581:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "66616c7365",
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1642:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1581:66:0",
                    "trueExpression": {
                      "hexValue": "74727565",
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1635:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 77,
                  "id": 90,
                  "nodeType": "Return",
                  "src": "1574:73:0"
                }
              ]
            },
            "functionSelector": "746c35e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOnTeam",
            "nameLocation": "1511:8:0",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_hacker",
                  "nameLocation": "1528:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1520:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:17:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1559:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1558:6:0"
            },
            "scope": 546,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 198,
            "nodeType": "FunctionDefinition",
            "src": "1691:1002:0",
            "nodes": [],
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "1752:941:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1819:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$32_storage_$dyn_storage",
                              "typeString": "struct Hackathon.Team storage ref[] storage ref"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1825:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1819:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 103,
                            "name": "numberOfHackers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "1834:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1852:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "1834:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1819:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206d616e79206361707461696e73",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1855:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a6a2976cad6d70737df6e811f0eb4f9de98f3131a0334c75ec86b16f04b4152",
                          "typeString": "literal_string \"Too many captains\""
                        },
                        "value": "Too many captains"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a6a2976cad6d70737df6e811f0eb4f9de98f3131a0334c75ec86b16f04b4152",
                          "typeString": "literal_string \"Too many captains\""
                        }
                      ],
                      "id": 100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1811:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1811:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 111,
                          "name": "isHacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "1942:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 114,
                        "indexExpression": {
                          "expression": {
                            "id": 112,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1951:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1955:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1951:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1942:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b657220697320616c72656164792072656769737465726564",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1964:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d218573455f318036afb0ba43b65863b6f428aab7b8aaf2c6c957fb20c74b65b",
                          "typeString": "literal_string \"Hacker is already registered\""
                        },
                        "value": "Hacker is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d218573455f318036afb0ba43b65863b6f428aab7b8aaf2c6c957fb20c74b65b",
                          "typeString": "literal_string \"Hacker is already registered\""
                        }
                      ],
                      "id": 110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1934:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1934:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1934:61:0"
                },
                {
                  "assignments": [
                    120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 120,
                      "mutability": "mutable",
                      "name": "newTeam",
                      "nameLocation": "2017:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 197,
                      "src": "2005:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                        "typeString": "struct Hackathon.Team"
                      },
                      "typeName": {
                        "id": 119,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 118,
                          "name": "Team",
                          "nameLocations": [
                            "2005:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32,
                          "src": "2005:4:0"
                        },
                        "referencedDeclaration": 32,
                        "src": "2005:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$32_storage_ptr",
                          "typeString": "struct Hackathon.Team"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 142,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 122,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2032:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2036:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2032:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2052:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2044:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 124,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2044:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2044:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2064:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2056:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 128,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2056:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2056:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2076:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2068:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 132,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2068:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2068:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2088:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2080:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 136,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2080:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2080:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2092:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 121,
                      "name": "Team",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2027:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Team_$32_storage_ptr_$",
                        "typeString": "type(struct Hackathon.Team storage pointer)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2027:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                      "typeString": "struct Hackathon.Team memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2005:93:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Role_$13",
                      "typeString": "enum Hackathon.Role"
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 143,
                      "name": "_roll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "2148:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Role_$13",
                        "typeString": "enum Hackathon.Role"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 144,
                        "name": "Role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2157:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Role_$13_$",
                          "typeString": "type(enum Hackathon.Role)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2162:9:0",
                      "memberName": "Developer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "2157:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Role_$13",
                        "typeString": "enum Hackathon.Role"
                      }
                    },
                    "src": "2148:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Role_$13",
                        "typeString": "enum Hackathon.Role"
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 155,
                        "name": "_roll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "2283:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 156,
                          "name": "Role",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "2292:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Role_$13_$",
                            "typeString": "type(enum Hackathon.Role)"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2297:8:0",
                        "memberName": "Designer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "2292:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      },
                      "src": "2283:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 167,
                          "name": "_roll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "2414:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Role_$13",
                            "typeString": "enum Hackathon.Role"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 168,
                            "name": "Role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2423:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Role_$13_$",
                              "typeString": "type(enum Hackathon.Role)"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2428:14:0",
                          "memberName": "ProductManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "2423:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Role_$13",
                            "typeString": "enum Hackathon.Role"
                          }
                        },
                        "src": "2414:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 179,
                      "nodeType": "IfStatement",
                      "src": "2411:136:0",
                      "trueBody": {
                        "id": 178,
                        "nodeType": "Block",
                        "src": "2443:104:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 171,
                                  "name": "newTeam",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 120,
                                  "src": "2501:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                                    "typeString": "struct Hackathon.Team memory"
                                  }
                                },
                                "id": 173,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "2509:14:0",
                                "memberName": "productManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29,
                                "src": "2501:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 174,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2526:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2530:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2526:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2501:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 177,
                            "nodeType": "ExpressionStatement",
                            "src": "2501:35:0"
                          }
                        ]
                      }
                    },
                    "id": 180,
                    "nodeType": "IfStatement",
                    "src": "2280:267:0",
                    "trueBody": {
                      "id": 166,
                      "nodeType": "Block",
                      "src": "2306:91:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 159,
                                "name": "newTeam",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 120,
                                "src": "2357:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                                  "typeString": "struct Hackathon.Team memory"
                                }
                              },
                              "id": 161,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "2365:8:0",
                              "memberName": "designer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "2357:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 162,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2376:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2380:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2376:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2357:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 165,
                          "nodeType": "ExpressionStatement",
                          "src": "2357:29:0"
                        }
                      ]
                    }
                  },
                  "id": 181,
                  "nodeType": "IfStatement",
                  "src": "2145:402:0",
                  "trueBody": {
                    "id": 154,
                    "nodeType": "Block",
                    "src": "2172:94:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 147,
                              "name": "newTeam",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "2224:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                                "typeString": "struct Hackathon.Team memory"
                              }
                            },
                            "id": 149,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2232:10:0",
                            "memberName": "developer1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "2224:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 150,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2245:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2249:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2245:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2224:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 153,
                        "nodeType": "ExpressionStatement",
                        "src": "2224:31:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 185,
                        "name": "newTeam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "2567:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                          "typeString": "struct Hackathon.Team memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                          "typeString": "struct Hackathon.Team memory"
                        }
                      ],
                      "expression": {
                        "id": 182,
                        "name": "teams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "2556:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Team_$32_storage_$dyn_storage",
                          "typeString": "struct Hackathon.Team storage ref[] storage ref"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2562:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2556:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Team_$32_storage_$dyn_storage_ptr_$_t_struct$_Team_$32_storage_$returns$__$attached_to$_t_array$_t_struct$_Team_$32_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Hackathon.Team storage ref[] storage pointer,struct Hackathon.Team storage ref)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2556:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "2556:19:0"
                },
                {
                  "expression": {
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 188,
                        "name": "teamsByCaptain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "2626:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                          "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                        }
                      },
                      "id": 191,
                      "indexExpression": {
                        "expression": {
                          "id": 189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2641:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2645:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2641:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2626:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_storage",
                        "typeString": "struct Hackathon.Team storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 192,
                      "name": "newTeam",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "2655:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                        "typeString": "struct Hackathon.Team memory"
                      }
                    },
                    "src": "2626:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Team_$32_storage",
                      "typeString": "struct Hackathon.Team storage ref"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "2626:36:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2680:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 99,
                  "id": 196,
                  "nodeType": "Return",
                  "src": "2673:11:0"
                }
              ]
            },
            "functionSelector": "a9a7d7e9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsCaptain",
            "nameLocation": "1700:17:0",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_roll",
                  "nameLocation": "1723:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "1718:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Role_$13",
                    "typeString": "enum Hackathon.Role"
                  },
                  "typeName": {
                    "id": 94,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 93,
                      "name": "Role",
                      "nameLocations": [
                        "1718:4:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13,
                      "src": "1718:4:0"
                    },
                    "referencedDeclaration": 13,
                    "src": "1718:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Role_$13",
                      "typeString": "enum Hackathon.Role"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1717:12:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "1747:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1747:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1746:6:0"
            },
            "scope": 546,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 246,
            "nodeType": "FunctionDefinition",
            "src": "2737:616:0",
            "nodes": [],
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "2797:556:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2864:21:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 207,
                            "name": "isHacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2865:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 210,
                          "indexExpression": {
                            "expression": {
                              "id": 208,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2874:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2878:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2874:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2865:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b657220697320616c72656164792072656769737465726564",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2887:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d218573455f318036afb0ba43b65863b6f428aab7b8aaf2c6c957fb20c74b65b",
                          "typeString": "literal_string \"Hacker is already registered\""
                        },
                        "value": "Hacker is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d218573455f318036afb0ba43b65863b6f428aab7b8aaf2c6c957fb20c74b65b",
                          "typeString": "literal_string \"Hacker is already registered\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2856:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2856:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "2856:62:0"
                },
                {
                  "assignments": [
                    217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "mutability": "mutable",
                      "name": "newHacker",
                      "nameLocation": "2980:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 245,
                      "src": "2966:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hacker_$19_memory_ptr",
                        "typeString": "struct Hackathon.Hacker"
                      },
                      "typeName": {
                        "id": 216,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 215,
                          "name": "Hacker",
                          "nameLocations": [
                            "2966:6:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19,
                          "src": "2966:6:0"
                        },
                        "referencedDeclaration": 19,
                        "src": "2966:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hacker_$19_storage_ptr",
                          "typeString": "struct Hackathon.Hacker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3007:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2999:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2999:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2999:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 223,
                        "name": "_roll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "3011:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      ],
                      "id": 218,
                      "name": "Hacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2992:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Hacker_$19_storage_ptr_$",
                        "typeString": "type(struct Hackathon.Hacker storage pointer)"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2992:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Hacker_$19_memory_ptr",
                      "typeString": "struct Hackathon.Hacker memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2966:51:0"
                },
                {
                  "expression": {
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 226,
                        "name": "hackersByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "3071:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                          "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                        }
                      },
                      "id": 229,
                      "indexExpression": {
                        "expression": {
                          "id": 227,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3088:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3092:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3088:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3071:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hacker_$19_storage",
                        "typeString": "struct Hackathon.Hacker storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 230,
                      "name": "newHacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "3102:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hacker_$19_memory_ptr",
                        "typeString": "struct Hackathon.Hacker memory"
                      }
                    },
                    "src": "3071:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Hacker_$19_storage",
                      "typeString": "struct Hackathon.Hacker storage ref"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3071:40:0"
                },
                {
                  "expression": {
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3182:17:0",
                    "subExpression": {
                      "id": 233,
                      "name": "numberOfHackers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3182:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "3182:17:0"
                },
                {
                  "expression": {
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 236,
                        "name": "isHacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3268:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 239,
                      "indexExpression": {
                        "expression": {
                          "id": 237,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3277:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3281:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3277:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3268:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3291:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3268:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "3268:27:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3342:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 205,
                  "id": 244,
                  "nodeType": "Return",
                  "src": "3335:11:0"
                }
              ]
            },
            "functionSelector": "7e101f78",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsHacker",
            "nameLocation": "2746:16:0",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "_roll",
                  "nameLocation": "2768:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "2763:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Role_$13",
                    "typeString": "enum Hackathon.Role"
                  },
                  "typeName": {
                    "id": 200,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 199,
                      "name": "Role",
                      "nameLocations": [
                        "2763:4:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13,
                      "src": "2763:4:0"
                    },
                    "referencedDeclaration": 13,
                    "src": "2763:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Role_$13",
                      "typeString": "enum Hackathon.Role"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2762:12:0"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "2792:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2792:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2791:6:0"
            },
            "scope": 546,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 430,
            "nodeType": "FunctionDefinition",
            "src": "3388:2012:0",
            "nodes": [],
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "3453:1947:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 254,
                              "name": "teamsByCaptain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "3516:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                              }
                            },
                            "id": 257,
                            "indexExpression": {
                              "expression": {
                                "id": 255,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3531:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3535:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3531:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3516:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$32_storage",
                              "typeString": "struct Hackathon.Team storage ref"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3543:14:0",
                          "memberName": "captainAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "3516:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 259,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3561:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3565:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3561:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3516:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f742061206361707461696e",
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3573:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_091da4f260601ac7246f5b79530807b3169c7c4c45059873a54ebf9968618b6d",
                          "typeString": "literal_string \"Caller is not a captain\""
                        },
                        "value": "Caller is not a captain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_091da4f260601ac7246f5b79530807b3169c7c4c45059873a54ebf9968618b6d",
                          "typeString": "literal_string \"Caller is not a captain\""
                        }
                      ],
                      "id": 253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3508:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3508:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "3508:91:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 266,
                          "name": "isHacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "3661:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 268,
                        "indexExpression": {
                          "id": 267,
                          "name": "_hacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "3670:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3661:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b6572206973206e6f742072656769737465726564",
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3680:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a89cfc77786e5695e9f90ffedb92e8b59860e2d2227da77755036e8ace5565c1",
                          "typeString": "literal_string \"Hacker is not registered\""
                        },
                        "value": "Hacker is not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a89cfc77786e5695e9f90ffedb92e8b59860e2d2227da77755036e8ace5565c1",
                          "typeString": "literal_string \"Hacker is not registered\""
                        }
                      ],
                      "id": 265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3653:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3653:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3653:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 273,
                              "name": "hackersByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "3780:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                              }
                            },
                            "id": 275,
                            "indexExpression": {
                              "id": 274,
                              "name": "_hacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "3797:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3780:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hacker_$19_storage",
                              "typeString": "struct Hackathon.Hacker storage ref"
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3806:11:0",
                          "memberName": "teamCaptain",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "3780:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3829:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3821:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 277,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3821:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3821:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3780:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b657220697320616c7265616479206f6e2061207465616d",
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3833:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29f9f8a3b91d9ee85f3e2554efeac34c3086d92d728a2e8c7def52182b964fc4",
                          "typeString": "literal_string \"Hacker is already on a team\""
                        },
                        "value": "Hacker is already on a team"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29f9f8a3b91d9ee85f3e2554efeac34c3086d92d728a2e8c7def52182b964fc4",
                          "typeString": "literal_string \"Hacker is already on a team\""
                        }
                      ],
                      "id": 272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3772:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3772:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "3772:91:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Role_$13",
                      "typeString": "enum Hackathon.Role"
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 285,
                          "name": "hackersByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "3948:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                            "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                          }
                        },
                        "id": 287,
                        "indexExpression": {
                          "id": 286,
                          "name": "_hacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "3965:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3948:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hacker_$19_storage",
                          "typeString": "struct Hackathon.Hacker storage ref"
                        }
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3974:4:0",
                      "memberName": "role",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "3948:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Role_$13",
                        "typeString": "enum Hackathon.Role"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 289,
                        "name": "Role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "3982:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Role_$13_$",
                          "typeString": "type(enum Hackathon.Role)"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3987:9:0",
                      "memberName": "Developer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "3982:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Role_$13",
                        "typeString": "enum Hackathon.Role"
                      }
                    },
                    "src": "3948:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Role_$13",
                        "typeString": "enum Hackathon.Role"
                      },
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 347,
                            "name": "hackersByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "4506:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                              "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                            }
                          },
                          "id": 349,
                          "indexExpression": {
                            "id": 348,
                            "name": "_hacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "4523:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4506:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hacker_$19_storage",
                            "typeString": "struct Hackathon.Hacker storage ref"
                          }
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4532:4:0",
                        "memberName": "role",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "4506:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 351,
                          "name": "Role",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "4540:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Role_$13_$",
                            "typeString": "type(enum Hackathon.Role)"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4545:8:0",
                        "memberName": "Designer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "4540:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        }
                      },
                      "src": "4506:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Role_$13",
                          "typeString": "enum Hackathon.Role"
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 377,
                              "name": "hackersByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "4820:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                              }
                            },
                            "id": 379,
                            "indexExpression": {
                              "id": 378,
                              "name": "_hacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "4837:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4820:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hacker_$19_storage",
                              "typeString": "struct Hackathon.Hacker storage ref"
                            }
                          },
                          "id": 380,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4846:4:0",
                          "memberName": "role",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "4820:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Role_$13",
                            "typeString": "enum Hackathon.Role"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 381,
                            "name": "Role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "4854:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Role_$13_$",
                              "typeString": "type(enum Hackathon.Role)"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4859:14:0",
                          "memberName": "ProductManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "4854:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Role_$13",
                            "typeString": "enum Hackathon.Role"
                          }
                        },
                        "src": "4820:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 407,
                      "nodeType": "IfStatement",
                      "src": "4817:325:0",
                      "trueBody": {
                        "id": 406,
                        "nodeType": "Block",
                        "src": "4874:268:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 385,
                                        "name": "teamsByCaptain",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46,
                                        "src": "4960:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                          "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                        }
                                      },
                                      "id": 388,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 386,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "4975:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 387,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4979:6:0",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "4975:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4960:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Team_$32_storage",
                                        "typeString": "struct Hackathon.Team storage ref"
                                      }
                                    },
                                    "id": 389,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4987:14:0",
                                    "memberName": "productManager",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 29,
                                    "src": "4960:41:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 392,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5013:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 391,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5005:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 390,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5005:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5005:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "4960:55:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "5465616d2069732066756c6c",
                                  "id": 395,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5017:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c3e2cf4152b712ea0b23d60bbf367bab194cb461f23f0d8d00e567e85593709c",
                                    "typeString": "literal_string \"Team is full\""
                                  },
                                  "value": "Team is full"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_c3e2cf4152b712ea0b23d60bbf367bab194cb461f23f0d8d00e567e85593709c",
                                    "typeString": "literal_string \"Team is full\""
                                  }
                                ],
                                "id": 384,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "4952:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4952:80:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 397,
                            "nodeType": "ExpressionStatement",
                            "src": "4952:80:0"
                          },
                          {
                            "expression": {
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 398,
                                    "name": "teamsByCaptain",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46,
                                    "src": "5080:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                      "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                    }
                                  },
                                  "id": 401,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 399,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5095:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 400,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5099:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5095:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5080:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Team_$32_storage",
                                    "typeString": "struct Hackathon.Team storage ref"
                                  }
                                },
                                "id": 402,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "5107:14:0",
                                "memberName": "productManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29,
                                "src": "5080:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 403,
                                "name": "_hacker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 248,
                                "src": "5124:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5080:51:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 405,
                            "nodeType": "ExpressionStatement",
                            "src": "5080:51:0"
                          }
                        ]
                      }
                    },
                    "id": 408,
                    "nodeType": "IfStatement",
                    "src": "4503:639:0",
                    "trueBody": {
                      "id": 376,
                      "nodeType": "Block",
                      "src": "4554:249:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 355,
                                      "name": "teamsByCaptain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "4633:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                      }
                                    },
                                    "id": 358,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 356,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4648:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 357,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4652:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4648:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4633:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$32_storage",
                                      "typeString": "struct Hackathon.Team storage ref"
                                    }
                                  },
                                  "id": 359,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4660:8:0",
                                  "memberName": "designer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 27,
                                  "src": "4633:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 362,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4680:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 361,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4672:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 360,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4672:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 363,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4672:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4633:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5465616d2069732066756c6c",
                                "id": 365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4684:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c3e2cf4152b712ea0b23d60bbf367bab194cb461f23f0d8d00e567e85593709c",
                                  "typeString": "literal_string \"Team is full\""
                                },
                                "value": "Team is full"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c3e2cf4152b712ea0b23d60bbf367bab194cb461f23f0d8d00e567e85593709c",
                                  "typeString": "literal_string \"Team is full\""
                                }
                              ],
                              "id": 354,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "4625:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4625:74:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 367,
                          "nodeType": "ExpressionStatement",
                          "src": "4625:74:0"
                        },
                        {
                          "expression": {
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 368,
                                  "name": "teamsByCaptain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46,
                                  "src": "4747:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                    "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                  }
                                },
                                "id": 371,
                                "indexExpression": {
                                  "expression": {
                                    "id": 369,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4762:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4766:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4762:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4747:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$32_storage",
                                  "typeString": "struct Hackathon.Team storage ref"
                                }
                              },
                              "id": 372,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "4774:8:0",
                              "memberName": "designer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "4747:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 373,
                              "name": "_hacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "4785:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4747:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 375,
                          "nodeType": "ExpressionStatement",
                          "src": "4747:45:0"
                        }
                      ]
                    }
                  },
                  "id": 409,
                  "nodeType": "IfStatement",
                  "src": "3945:1197:0",
                  "trueBody": {
                    "id": 346,
                    "nodeType": "Block",
                    "src": "3997:492:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 293,
                                      "name": "teamsByCaptain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "4077:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                      }
                                    },
                                    "id": 296,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 294,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4092:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 295,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4096:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4092:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4077:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$32_storage",
                                      "typeString": "struct Hackathon.Team storage ref"
                                    }
                                  },
                                  "id": 297,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4104:10:0",
                                  "memberName": "developer1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23,
                                  "src": "4077:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 300,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4126:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 299,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4118:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 298,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4118:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4118:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4077:51:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 303,
                                      "name": "teamsByCaptain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "4132:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                      }
                                    },
                                    "id": 306,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 304,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4147:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 305,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4151:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4147:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4132:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$32_storage",
                                      "typeString": "struct Hackathon.Team storage ref"
                                    }
                                  },
                                  "id": 307,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4159:10:0",
                                  "memberName": "developer2",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 25,
                                  "src": "4132:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 310,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4181:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 309,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4173:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 308,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4173:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4173:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4132:51:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4077:106:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5465616d2069732066756c6c",
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4185:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c3e2cf4152b712ea0b23d60bbf367bab194cb461f23f0d8d00e567e85593709c",
                                "typeString": "literal_string \"Team is full\""
                              },
                              "value": "Team is full"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c3e2cf4152b712ea0b23d60bbf367bab194cb461f23f0d8d00e567e85593709c",
                                "typeString": "literal_string \"Team is full\""
                              }
                            ],
                            "id": 292,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4069:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4069:131:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 316,
                        "nodeType": "ExpressionStatement",
                        "src": "4069:131:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 317,
                                "name": "teamsByCaptain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "4251:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                  "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                }
                              },
                              "id": 320,
                              "indexExpression": {
                                "expression": {
                                  "id": 318,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4266:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4270:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4266:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4251:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$32_storage",
                                "typeString": "struct Hackathon.Team storage ref"
                              }
                            },
                            "id": 321,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4278:10:0",
                            "memberName": "developer1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "4251:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4300:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4292:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 322,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4292:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4292:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4251:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 344,
                          "nodeType": "Block",
                          "src": "4399:80:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 336,
                                      "name": "teamsByCaptain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "4417:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                      }
                                    },
                                    "id": 339,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 337,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4432:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 338,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4436:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4432:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4417:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$32_storage",
                                      "typeString": "struct Hackathon.Team storage ref"
                                    }
                                  },
                                  "id": 340,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "4444:10:0",
                                  "memberName": "developer2",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 25,
                                  "src": "4417:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 341,
                                  "name": "_hacker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 248,
                                  "src": "4457:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4417:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 343,
                              "nodeType": "ExpressionStatement",
                              "src": "4417:47:0"
                            }
                          ]
                        },
                        "id": 345,
                        "nodeType": "IfStatement",
                        "src": "4248:231:0",
                        "trueBody": {
                          "id": 335,
                          "nodeType": "Block",
                          "src": "4303:79:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 327,
                                      "name": "teamsByCaptain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "4321:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                        "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                                      }
                                    },
                                    "id": 330,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 328,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4336:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 329,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4340:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4336:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4321:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$32_storage",
                                      "typeString": "struct Hackathon.Team storage ref"
                                    }
                                  },
                                  "id": 331,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "4348:10:0",
                                  "memberName": "developer1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23,
                                  "src": "4321:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 332,
                                  "name": "_hacker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 248,
                                  "src": "4360:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4321:46:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 334,
                              "nodeType": "ExpressionStatement",
                              "src": "4321:46:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 410,
                          "name": "hackersByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "5207:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                            "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                          }
                        },
                        "id": 412,
                        "indexExpression": {
                          "id": 411,
                          "name": "_hacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "5224:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5207:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hacker_$19_storage",
                          "typeString": "struct Hackathon.Hacker storage ref"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5233:11:0",
                      "memberName": "teamCaptain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "5207:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 414,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5247:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5251:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5247:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5207:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "5207:50:0"
                },
                {
                  "expression": {
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 418,
                        "name": "teamsByCaptain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "5319:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                          "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                        }
                      },
                      "id": 420,
                      "indexExpression": {
                        "id": 419,
                        "name": "_hacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "5334:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5319:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_storage",
                        "typeString": "struct Hackathon.Team storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 421,
                        "name": "teamsByCaptain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "5345:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                          "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                        }
                      },
                      "id": 424,
                      "indexExpression": {
                        "expression": {
                          "id": 422,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5360:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5364:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5360:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5345:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_storage",
                        "typeString": "struct Hackathon.Team storage ref"
                      }
                    },
                    "src": "5319:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Team_$32_storage",
                      "typeString": "struct Hackathon.Team storage ref"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "5319:52:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5389:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 252,
                  "id": 428,
                  "nodeType": "Return",
                  "src": "5382:11:0"
                }
              ]
            },
            "functionSelector": "ad15d422",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selectTeamMember",
            "nameLocation": "3397:16:0",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "_hacker",
                  "nameLocation": "3422:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "3414:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3414:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3413:17:0"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "3448:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3448:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3447:6:0"
            },
            "scope": 546,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 509,
            "nodeType": "FunctionDefinition",
            "src": "5435:869:0",
            "nodes": [],
            "body": {
              "id": 508,
              "nodeType": "Block",
              "src": "5500:804:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 438,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5570:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5576:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5570:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 440,
                          "name": "hackathonStartTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "5588:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5570:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e666572656e63652068617320737461727465642c2063616e6e6f742072656d6f7665207465616d206d656d626572",
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5608:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b8e5a1e5a1fe0f86b8a67cc1f6b42192c83181ec84e0fe422c143a498b37186",
                          "typeString": "literal_string \"Conference has started, cannot remove team member\""
                        },
                        "value": "Conference has started, cannot remove team member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b8e5a1e5a1fe0f86b8a67cc1f6b42192c83181ec84e0fe422c143a498b37186",
                          "typeString": "literal_string \"Conference has started, cannot remove team member\""
                        }
                      ],
                      "id": 437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5562:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5562:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "5562:98:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 446,
                              "name": "teamsByCaptain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "5724:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                              }
                            },
                            "id": 449,
                            "indexExpression": {
                              "expression": {
                                "id": 447,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5739:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5743:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5739:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5724:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$32_storage",
                              "typeString": "struct Hackathon.Team storage ref"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5751:14:0",
                          "memberName": "captainAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "5724:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 451,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5769:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5773:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5769:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5724:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f742061206361707461696e",
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5781:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_091da4f260601ac7246f5b79530807b3169c7c4c45059873a54ebf9968618b6d",
                          "typeString": "literal_string \"Caller is not a captain\""
                        },
                        "value": "Caller is not a captain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_091da4f260601ac7246f5b79530807b3169c7c4c45059873a54ebf9968618b6d",
                          "typeString": "literal_string \"Caller is not a captain\""
                        }
                      ],
                      "id": 445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5716:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5716:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "5716:91:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 458,
                              "name": "teamsByCaptain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "5879:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                              }
                            },
                            "id": 460,
                            "indexExpression": {
                              "id": 459,
                              "name": "_hacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 432,
                              "src": "5894:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5879:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$32_storage",
                              "typeString": "struct Hackathon.Team storage ref"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5903:14:0",
                          "memberName": "captainAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "5879:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 462,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5921:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5925:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5921:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5879:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b6572206973206e6f74206f6e207468652063616c6c65722773207465616d",
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5933:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_338e51d3e089cd75615db0de7fc73ceb771586c01a395a5e2d7114c4bf0e4b4e",
                          "typeString": "literal_string \"Hacker is not on the caller's team\""
                        },
                        "value": "Hacker is not on the caller's team"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_338e51d3e089cd75615db0de7fc73ceb771586c01a395a5e2d7114c4bf0e4b4e",
                          "typeString": "literal_string \"Hacker is not on the caller's team\""
                        }
                      ],
                      "id": 457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5871:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5871:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "5871:99:0"
                },
                {
                  "expression": {
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 468,
                          "name": "hackersByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "6046:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Hacker_$19_storage_$",
                            "typeString": "mapping(address => struct Hackathon.Hacker storage ref)"
                          }
                        },
                        "id": 470,
                        "indexExpression": {
                          "id": 469,
                          "name": "_hacker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 432,
                          "src": "6063:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6046:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hacker_$19_storage",
                          "typeString": "struct Hackathon.Hacker storage ref"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6072:11:0",
                      "memberName": "teamCaptain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "6046:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6094:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6086:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 472,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6086:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6086:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6046:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "6046:50:0"
                },
                {
                  "expression": {
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 478,
                        "name": "teamsByCaptain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "6178:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                          "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                        }
                      },
                      "id": 480,
                      "indexExpression": {
                        "id": 479,
                        "name": "_hacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "6193:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6178:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_storage",
                        "typeString": "struct Hackathon.Team storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6217:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6209:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 482,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6209:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6209:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6229:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6221:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 486,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6221:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6221:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6241:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6233:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 490,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6233:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6233:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6253:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6245:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 494,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6245:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6245:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6265:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6257:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 498,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6257:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6257:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6269:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 481,
                        "name": "Team",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "6204:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Team_$32_storage_ptr_$",
                          "typeString": "type(struct Hackathon.Team storage pointer)"
                        }
                      },
                      "id": 503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6204:71:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Team_$32_memory_ptr",
                        "typeString": "struct Hackathon.Team memory"
                      }
                    },
                    "src": "6178:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Team_$32_storage",
                      "typeString": "struct Hackathon.Team storage ref"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "6178:97:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6293:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 436,
                  "id": 507,
                  "nodeType": "Return",
                  "src": "6286:11:0"
                }
              ]
            },
            "functionSelector": "14eba026",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeTeamMember",
            "nameLocation": "5444:16:0",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "_hacker",
                  "nameLocation": "5469:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "5461:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5461:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5460:17:0"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "5495:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5495:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5494:6:0"
            },
            "scope": 546,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 545,
            "nodeType": "FunctionDefinition",
            "src": "6333:523:0",
            "nodes": [],
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "6401:455:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 517,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6471:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6475:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6471:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 519,
                          "name": "hackathonAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "6485:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6471:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420746865206861636b6174686f6e2061646d696e",
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6501:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ea363ab55bb0bcde2268eac8041e69e6bcd218dff18f00da526946993c0c0b6",
                          "typeString": "literal_string \"Caller is not the hackathon admin\""
                        },
                        "value": "Caller is not the hackathon admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ea363ab55bb0bcde2268eac8041e69e6bcd218dff18f00da526946993c0c0b6",
                          "typeString": "literal_string \"Caller is not the hackathon admin\""
                        }
                      ],
                      "id": 516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6463:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6463:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "6463:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 525,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6603:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6609:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6603:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 527,
                          "name": "hackathonEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "6621:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6603:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861636b6174686f6e20686173206e6f7420656e64656420796574",
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6639:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_133c56abdb1c0bfc3cdfa618a273a3e0e3d7be3bf4928639a3fb8f40b9276573",
                          "typeString": "literal_string \"Hackathon has not ended yet\""
                        },
                        "value": "Hackathon has not ended yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_133c56abdb1c0bfc3cdfa618a273a3e0e3d7be3bf4928639a3fb8f40b9276573",
                          "typeString": "literal_string \"Hackathon has not ended yet\""
                        }
                      ],
                      "id": 524,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6595:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6595:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "6595:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 533,
                              "name": "teamsByCaptain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "6737:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Team_$32_storage_$",
                                "typeString": "mapping(address => struct Hackathon.Team storage ref)"
                              }
                            },
                            "id": 535,
                            "indexExpression": {
                              "id": 534,
                              "name": "_captain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 511,
                              "src": "6752:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6737:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$32_storage",
                              "typeString": "struct Hackathon.Team storage ref"
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6762:14:0",
                          "memberName": "captainAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "6737:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 537,
                          "name": "_captain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "6780:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6737:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f74206173736f63696174656420776974682061207465616d",
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6790:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e162ee8f2daff3a760e0135f1e5f4c6731fffbb65a9ed28dd4bfc9ceaf2a97b",
                          "typeString": "literal_string \"Address not associated with a team\""
                        },
                        "value": "Address not associated with a team"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e162ee8f2daff3a760e0135f1e5f4c6731fffbb65a9ed28dd4bfc9ceaf2a97b",
                          "typeString": "literal_string \"Address not associated with a team\""
                        }
                      ],
                      "id": 532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6729:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6729:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "6729:98:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6845:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 515,
                  "id": 543,
                  "nodeType": "Return",
                  "src": "6838:11:0"
                }
              ]
            },
            "functionSelector": "db33f4f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declareWinner",
            "nameLocation": "6342:13:0",
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "_captain",
                  "nameLocation": "6364:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "6356:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6356:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6355:18:0"
            },
            "returnParameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "6396:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6396:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6395:6:0"
            },
            "scope": 546,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Hackathon",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          546
        ],
        "name": "Hackathon",
        "nameLocation": "66:9:0",
        "scope": 547,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 0
}